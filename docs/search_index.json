[["index.html", "AlberdiLab | Domestic-feral cat metagenomics Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Domestic-feral cat metagenomics Ostaizka Aizpurua1 Antton Alberdi2 2024-05-26 Chapter 1 Introduction This webbook contains all the code used for data analysis in study on the recovery of metagenome‑assembled genomes and derived microbial communities from domestic and feral cat faecal samples collected in six countries. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/domestic_feral_cat_metagenomics.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(broom) library(broom.mixed) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(ANCOMBC) library(lme4) library(Hmsc) library(matrixStats) library(MuMIn) #library(MASS) library(nlme) library(emmeans) library(hilldiv2) library(distillR) University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ "],["data-preparation.html", "Chapter 2 Data preparation 2.1 Load data 2.2 Create working objects 2.3 Prepare color scheme 2.4 Prepare a phyloseq object 2.5 Wrap working objects", " Chapter 2 Data preparation 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_csv(&quot;data/sample_metadata.csv&quot;) %&gt;% rename(sample=CombinedID) 2.1.2 Read counts read_counts &lt;- read_tsv(&quot;data/read_counts.tsv&quot;) %&gt;% rename(genome=1) %&gt;% dplyr::select(c(&quot;genome&quot;,sample_metadata$sample)) 2.1.3 Genome coverage genome_coverage &lt;- read_tsv(&quot;data/genome_coverage.tsv&quot;) %&gt;% rename(genome=1) %&gt;% dplyr::select(c(&quot;genome&quot;,sample_metadata$sample)) 2.1.4 Genome metadata genome_metadata &lt;- read_csv(&quot;data/genome_metadata.csv&quot;) %&gt;% mutate(phylum = case_when( phylum == &quot;Actinobacteriota&quot; ~ &quot;Actinomycetota&quot;, phylum == &quot;Firmicutes&quot; ~ &quot;Bacillota&quot;, phylum == &quot;Firmicutes_A&quot; ~ &quot;Bacillota_A&quot;, phylum == &quot;Firmicutes_C&quot; ~ &quot;Bacillota_C&quot;, phylum == &quot;Proteobacteria&quot; ~ &quot;Pseudomonadota&quot;, TRUE ~ phylum)) 2.1.5 Genome tree genome_tree &lt;- read_tree(&quot;data/genome_tree.tre&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips 2.1.6 Genome annotations genome_annotations &lt;- read_tsv(&quot;data/genome_annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Filter reads by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.2.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.2.3 Distill annotations into GIFTs genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) Identifiers in the annotation table: 985 Identifiers in the database: 1547 Identifiers in both: 94 Percentage of annotation table identifiers used for distillation: 9.54% Percentage of database identifiers used for distillation: 6.08% 2.3 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate(phylum=str_remove_all(phylum, &quot;p__&quot;)) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% dplyr::select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.4 Prepare a phyloseq object phylo_samples &lt;- sample_metadata %&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() #convert to phyloseq sample_data object phylo_genome &lt;- genome_counts %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% dplyr::select(c(1,5:10))%&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% as.matrix() %&gt;% tax_table() #convert to phyloseq tax_table object physeq_genome &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) physeq_genome_clr &lt;- microbiome::transform(physeq_genome, &#39;clr&#39;) 2.5 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts, phylum_colors, physeq_genome, physeq_genome_clr, file = &quot;data/data.Rdata&quot;) "],["mag-catalogue.html", "Chapter 3 MAG catalogue 3.1 Genome phylogeny 3.2 Genome quality 3.3 Functional overview 3.4 Functional ordination", " Chapter 3 MAG catalogue load(&quot;data/data.Rdata&quot;) 3.1 Genome phylogeny # Generate the phylum color heatmap phylum_heatmap &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate(phylum=str_remove_all(phylum, &quot;p__&quot;)) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% dplyr::select(genome,phylum) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate basal tree circular_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% # extend to ultrametric for the sake of visualisation ggtree(., layout=&quot;fan&quot;, open.angle=10, size=0.5) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** # Add phylum ring circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.55, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + geom_tiplab2(size=1, hjust=-0.1) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Flush color scale to enable a new color scheme in the next ring circular_tree &lt;- circular_tree + new_scale_fill() # Add completeness ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_gradient(low = &quot;#d1f4ba&quot;, high = &quot;#f4baba&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=completeness, y=genome, fill=contamination), offset = 0.55, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add genome-size ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_manual(values = &quot;#cccccc&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=length, y=genome), offset = 0.05, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add text circular_tree &lt;- circular_tree + annotate(&#39;text&#39;, x=2.7, y=0, label=&#39; Phylum&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=3.1, y=0, label=&#39; Genome quality&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=3.5, y=0, label=&#39; Genome size&#39;, family=&#39;arial&#39;, size=3.5) #Plot circular tree circular_tree %&gt;% open_tree(30) %&gt;% rotate_tree(90) 3.2 Genome quality tibble(Completeness= paste0(round(genome_metadata$completeness %&gt;% mean(),2), &quot;±&quot;, round(genome_metadata$completeness %&gt;% sd(),2)), Contamination= paste0(round(genome_metadata$contamination %&gt;% mean(),2), &quot;±&quot;, round(genome_metadata$contamination %&gt;% sd(),2))) %&gt;% tt() tinytable_tzys6askqilll28el3pa .table td.tinytable_css_vtjp659cx0o0mc05q6tu, .table th.tinytable_css_vtjp659cx0o0mc05q6tu { border-bottom: solid 0.1em #d3d8dc; } Completeness Contamination 90.02±7.79 1.32±1.18 #Generate quality biplot genome_biplot &lt;- genome_metadata %&gt;% dplyr::select(c(genome,phylum,completeness,contamination,length)) %&gt;% arrange(match(genome, rev(genome_tree$tip.label))) %&gt;% #sort MAGs according to phylogenetic tree ggplot(aes(x=completeness,y=contamination,size=length,color=phylum)) + geom_point(alpha=0.7) + xlim(c(70,100)) + ylim(c(10,0)) + scale_color_manual(values=phylum_colors) + labs(y= &quot;Contamination&quot;, x = &quot;Completeness&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) #Generate contamination boxplot genome_contamination &lt;- genome_metadata %&gt;% ggplot(aes(y=contamination)) + ylim(c(10,0)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0.40, 0),&quot;inches&quot;)) #add bottom-margin (top, right, bottom, left) #Generate completeness boxplot genome_completeness &lt;- genome_metadata %&gt;% ggplot(aes(x=completeness)) + xlim(c(70,100)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0, 0.50),&quot;inches&quot;)) #add left-margin (top, right, bottom, left) #Render composite figure grid.arrange(grobs = list(genome_completeness,genome_biplot,genome_contamination), layout_matrix = rbind(c(1,1,1,1,1,1,1,1,1,1,1,4), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3))) 3.3 Functional overview # Aggregate basal GIFT into elements function_table &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) # Generate basal tree function_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #Add phylum colors next to the tree tips function_tree &lt;- gheatmap(function_tree, phylum_heatmap, offset=0, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() #Add functions heatmap function_tree &lt;- gheatmap(function_tree, function_table, offset=0.5, width=3.5, colnames=FALSE) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;steelblue&quot;, na.value=&quot;white&quot;) + labs(fill=&quot;GIFT&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() # Add completeness barplots function_tree &lt;- function_tree + geom_fruit(data=genome_metadata, geom=geom_bar, grid.params=list(axis=&quot;x&quot;, text.size=2, nbreak = 1), axis.params=list(vline=TRUE), mapping = aes(x=length, y=genome, fill=completeness), offset = 3.8, orientation=&quot;y&quot;, stat=&quot;identity&quot;) + scale_fill_gradient(low = &quot;#cf8888&quot;, high = &quot;#a2cc87&quot;) + labs(fill=&quot;Genome\\ncompleteness&quot;) function_tree 3.4 Functional ordination # Generate the tSNE ordination tSNE_function &lt;- Rtsne(X=function_table, dims = 2, check_duplicates = FALSE) # Plot the ordination function_ordination &lt;- tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% dplyr::select(genome,phylum,tSNE1,tSNE2, length) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length))+ geom_point(shape=16, alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) # enlarge Phylum dots in legend function_ordination "],["community-composition.html", "Chapter 4 Community composition 4.1 Taxonomy overview 4.2 Taxonomy boxplot", " Chapter 4 Community composition load(&quot;data/data.Rdata&quot;) 4.1 Taxonomy overview 4.1.1 Stacked barplot genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata filter(count &gt; 0) %&gt;% #filter 0 counts ggplot(., aes(x=sample,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + facet_nested(. ~ Location + Origin, scales=&quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + theme(axis.text.x = element_blank(), axis.ticks.x =element_blank(), axis.title.x = element_blank(), axis.text.y = element_text(size=8), axis.title.y = element_text(size=12), panel.background = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.border = element_rect(colour = &quot;black&quot;, fill = NA), strip.background = element_rect(fill = &quot;white&quot;, color = &quot;black&quot;), strip.text = element_text(size = 12, lineheight = 0.6)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Samples&quot;) genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata filter(count &gt; 0) %&gt;% #filter 0 counts ggplot(., aes(x=sample,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + facet_grid(. ~ Location, scales=&quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + theme(axis.text.x = element_blank(), axis.ticks.x =element_blank(), axis.title.x = element_blank(), axis.text.y = element_text(size=8), axis.title.y = element_text(size=12), panel.background = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.border = element_rect(colour = &quot;black&quot;, fill = NA), strip.background = element_rect(fill = &quot;white&quot;, color = &quot;black&quot;), strip.text = element_text(size = 12, lineheight = 0.6)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Samples&quot;) ### Phylum relative abundances phylum_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,phylum) %&gt;% summarise(relabun=sum(count)) phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=mean(relabun, na.rm=T),sd=sd(relabun, na.rm=T)) %&gt;% arrange(-mean) %&gt;% tt() tinytable_kd6w7gd78q4fvzlnoal8 .table td.tinytable_css_alqmx8fr8mc7r2bbwpjx, .table th.tinytable_css_alqmx8fr8mc7r2bbwpjx { border-bottom: solid 0.1em #d3d8dc; } phylum mean sd Bacteroidota 0.3174419111 0.183019959 Bacillota_A 0.1950249672 0.120311961 Actinomycetota 0.1816628641 0.164661070 Pseudomonadota 0.0906110310 0.129035667 Campylobacterota 0.0753140001 0.122740598 Bacillota_C 0.0657125307 0.090589426 Bacillota 0.0558322249 0.084087344 Fusobacteriota 0.0169238273 0.036464401 Desulfobacterota 0.0012635896 0.004283801 Cyanobacteria 0.0002130539 0.001747414 phylum_arrange &lt;- phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=mean(relabun)) %&gt;% arrange(-mean) %&gt;% dplyr::select(phylum) %&gt;% pull() phylum_summary %&gt;% filter(phylum %in% phylum_arrange) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange))) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum, fill=phylum)) + scale_color_manual(values=phylum_colors[rev(phylum_arrange)]) + scale_fill_manual(values=phylum_colors[-8]) + geom_boxplot(alpha=0.2)+ geom_jitter(alpha=0.5) + facet_nested(. ~ Location)+ theme_minimal() + theme(legend.position=&quot;none&quot;, strip.text.x = element_text(size = 14, color=&quot;black&quot;,face=&quot;bold&quot;), axis.text.x = element_text(vjust = 0.5, size = 10), axis.text.y = element_text(size = 12), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.title = element_text(size = 14, face = &quot;bold&quot;), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)) ) + labs(y=&quot;Phylum&quot;,x=&quot;Relative abundance&quot;) phylum_summary %&gt;% filter(phylum %in% phylum_arrange) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange))) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum, fill=phylum)) + scale_color_manual(values=phylum_colors[rev(phylum_arrange)]) + scale_fill_manual(values=phylum_colors[-8]) + geom_boxplot(alpha=0.2)+ geom_jitter(alpha=0.5) + theme_minimal() + theme(legend.position=&quot;none&quot;) + labs(y=&quot;Phylum&quot;,x=&quot;Relative abundance&quot;) 4.1.2 Phylum percentages by behaviour Tame cats tinytable_lce8nicuqvh24pfhug12 .table td.tinytable_css_4vd6qiyv3rl75eg0lt4y, .table th.tinytable_css_4vd6qiyv3rl75eg0lt4y { border-bottom: solid 0.1em #d3d8dc; } Phylum mean sd Bacteroidota 32.56152690 17.0735823 Bacillota_A 19.43901972 9.2325815 Actinomycetota 18.15297600 14.6097544 Pseudomonadota 8.58500960 8.8366787 Campylobacterota 7.99160260 11.4635975 Bacillota_C 7.03812491 9.0283540 Bacillota 4.78213672 6.8948853 Fusobacteriota 1.24402612 1.8499876 Desulfobacterota 0.17332897 0.3125926 Cyanobacteria 0.03224846 0.2207708 Feral cats tinytable_neab9f2wieu77asylqao .table td.tinytable_css_vhr5xbtz87kssromx3ug, .table th.tinytable_css_vhr5xbtz87kssromx3ug { border-bottom: solid 0.1em #d3d8dc; } Phylum mean sd Bacteroidota 28.216582864 17.60825972 Bacillota_A 24.008928630 11.57531069 Actinomycetota 17.469038917 14.43475736 Pseudomonadota 8.640301288 12.50709604 Bacillota_C 7.456856533 8.95839921 Bacillota 7.173243065 8.66411699 Campylobacterota 4.450683081 6.19179683 Fusobacteriota 2.234878008 4.15301854 Desulfobacterota 0.342681443 0.81138291 Cyanobacteria 0.006806171 0.03760557 4.2 Taxonomy boxplot 4.2.1 Family family_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,family) %&gt;% summarise(relabun=sum(count)) family_summary %&gt;% group_by(family) %&gt;% summarise(mean=mean(relabun, na.rm=T),sd=sd(relabun, na.rm=T)) %&gt;% arrange(-mean) %&gt;% tt() tinytable_fmagn0x4hnggec1r2y9s .table td.tinytable_css_2v9cr51o838r5ve2jf27, .table th.tinytable_css_2v9cr51o838r5ve2jf27 { border-bottom: solid 0.1em #d3d8dc; } family mean sd Bacteroidaceae 2.957679e-01 0.1794702282 Lachnospiraceae 1.072346e-01 0.0913528566 Coriobacteriaceae 9.631433e-02 0.1009342181 Helicobacteraceae 5.410633e-02 0.1022560566 Megasphaeraceae 3.895540e-02 0.0732948425 Enterobacteriaceae 3.671005e-02 0.1156492986 Bifidobacteriaceae 3.634821e-02 0.0642309973 Succinivibrionaceae 3.534985e-02 0.0599537024 Ruminococcaceae 3.408006e-02 0.0348433297 Actinomycetaceae 3.080463e-02 0.0930244958 Campylobacteraceae 2.120767e-02 0.0374825084 Lactobacillaceae 2.056464e-02 0.0600942736 Fusobacteriaceae 1.692383e-02 0.0364644007 Clostridiaceae 1.655096e-02 0.0573573568 Burkholderiaceae 1.538244e-02 0.0157737872 Atopobiaceae 1.510044e-02 0.0393574894 Erysipelotrichaceae 1.498819e-02 0.0297202782 Porphyromonadaceae 1.231678e-02 0.0490743570 Oscillospiraceae 1.169099e-02 0.0154660823 Dialisteraceae 1.109249e-02 0.0168027270 Peptoniphilaceae 1.027007e-02 0.0377623762 Streptococcaceae 1.009343e-02 0.0465284432 Selenomonadaceae 9.051718e-03 0.0152538557 Acidaminococcaceae 6.612925e-03 0.0134491243 Erysipelatoclostridiaceae 6.598637e-03 0.0107938056 Peptostreptococcaceae 6.477379e-03 0.0101260977 Anaerovoracaceae 4.239616e-03 0.0103079362 Tannerellaceae 3.414585e-03 0.0079108669 Pasteurellaceae 2.963621e-03 0.0184648739 Enterococcaceae 2.804985e-03 0.0085239000 Mycobacteriaceae 2.785187e-03 0.0190576068 Rikenellaceae 2.616836e-03 0.0106713550 Acutalibacteraceae 2.198544e-03 0.0044303862 Marinifilaceae 2.086026e-03 0.0055223355 Butyricicoccaceae 1.463315e-03 0.0031506247 Desulfovibrionaceae 1.263590e-03 0.0042838013 Muribaculaceae 9.291851e-04 0.0040885460 UBA660 6.460679e-04 0.0035734633 Anaerotignaceae 5.353989e-04 0.0025028446 Barnesiellaceae 3.105707e-04 0.0011701232 UMGS124 3.100703e-04 0.0017862741 Gastranaerophilaceae 2.130539e-04 0.0017474140 CAG-508 2.052995e-04 0.0007194205 CAG-239 2.050753e-04 0.0018010322 CAG-826 1.362811e-04 0.0007776869 UBA1381 7.878665e-05 0.0007556950 family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% dplyr::select(family) %&gt;% pull() # Per origin family_summary %&gt;% left_join(genome_metadata %&gt;% dplyr::select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~Origin)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) # Per location family_summary %&gt;% left_join(genome_metadata %&gt;% dplyr::select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum, fill=phylum)) + scale_color_manual(values=phylum_colors[-8]) + scale_fill_manual(values=phylum_colors[-8]) + geom_boxplot(alpha=0.2)+ geom_jitter(alpha=0.5) + facet_grid(.~Location)+ theme_minimal() + theme(legend.position=&quot;none&quot;, strip.text.x = element_text(size = 14, color=&quot;black&quot;,face=&quot;bold&quot;), axis.text.x = element_text(vjust = 0.5, size = 10), axis.text.y = element_text(size = 12), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.title = element_text(size = 14, face = &quot;bold&quot;), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))+ labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 4.2.2 Genus genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,phylum,genus) %&gt;% summarise(relabun=sum(count)) %&gt;% filter(genus != &quot;g__&quot;) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) genus_summary_sort &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=mean(relabun, na.rm=T),sd=sd(relabun, na.rm=T)) %&gt;% arrange(-mean) genus_summary_sort %&gt;% tt() tinytable_ut1ljzf8089m4mth9cav .table td.tinytable_css_tq0qklwmq5481bsm0boy, .table th.tinytable_css_tq0qklwmq5481bsm0boy { border-bottom: solid 0.1em #d3d8dc; } genus mean sd Prevotella 1.364856e-01 0.1353999322 Collinsella 9.631433e-02 0.1009342181 Phocaeicola 8.993433e-02 0.0955977240 Bacteroides 5.173169e-02 0.0635714050 Megasphaera 3.869704e-02 0.0730748863 Helicobacter_B 3.657334e-02 0.0843378196 Bifidobacterium 3.634821e-02 0.0642309973 Anaerobiospirillum 3.459305e-02 0.0599454952 Escherichia 3.275523e-02 0.1083759749 Roseburia 2.314992e-02 0.0533913900 Campylobacter_D 2.120767e-02 0.0374825084 Blautia_A 2.051642e-02 0.0231346773 Pauljensenia 1.977626e-02 0.0800352518 Negativibacillus 1.819490e-02 0.0215815280 Prevotellamassilia 1.738141e-02 0.0343949273 Helicobacter_A 1.713427e-02 0.0507397988 Clostridium_P 1.645501e-02 0.0573123071 Fusobacterium_B 1.469492e-02 0.0345732902 Sutterella 1.425550e-02 0.0152994499 Blautia 1.333921e-02 0.0183592066 UBA7748 1.330938e-02 0.0382333948 Porphyromonas_A 1.231678e-02 0.0490743570 Trueperella 1.102837e-02 0.0501260208 Ligilactobacillus 1.038602e-02 0.0327671906 Dialister 1.031903e-02 0.0157533129 Streptococcus 9.357277e-03 0.0446998121 Gemmiger 8.872488e-03 0.0146460260 Holdemanella 8.793459e-03 0.0187067258 Lactobacillus 8.261034e-03 0.0348551627 Clostridium_Q 7.967312e-03 0.0129501748 Ruminococcus_B 7.491864e-03 0.0133624741 Megamonas 6.998825e-03 0.0128982165 Peptacetobacter 6.477379e-03 0.0101260977 Catenibacterium 6.451673e-03 0.0106973049 Faecalimonas 6.214440e-03 0.0112084591 Faecalibacterium 6.206186e-03 0.0133252461 Bulleidia 6.127964e-03 0.0165765313 Lawsonibacter 5.743270e-03 0.0087015993 Peptoniphilus_A 4.928663e-03 0.0217722683 Acidaminococcus 4.738436e-03 0.0131157898 Eisenbergiella 4.302829e-03 0.0073261825 Plesiomonas 3.954812e-03 0.0176151160 Parabacteroides 3.414585e-03 0.0079108669 Catenibacillus 3.242799e-03 0.0054534742 Histophilus 2.963621e-03 0.0184648739 Alistipes 2.616836e-03 0.0106713550 CAG-81 2.576496e-03 0.0041736848 Mediterraneibacter 2.497312e-03 0.0073570318 Sellimonas 2.293821e-03 0.0042562326 Dysosmobacter 2.255402e-03 0.0038273521 Fusobacterium_A 2.228906e-03 0.0084702675 Mitsuokella 2.052893e-03 0.0089367483 Ruminococcus_A 2.042994e-03 0.0028573373 Corynebacterium 1.947467e-03 0.0162046636 CAG-317 1.827371e-03 0.0032549462 Parolsenella 1.791055e-03 0.0042478478 Odoribacter 1.786646e-03 0.0054424090 Phascolarctobacterium_A 1.773898e-03 0.0045007766 UMGS905 1.691812e-03 0.0039135118 Limosilactobacillus 1.637804e-03 0.0065016504 Flavonifractor 1.526253e-03 0.0030043128 S5-A14a 1.461682e-03 0.0086194900 CAG-110 1.454019e-03 0.0077541828 VUNA01 1.401454e-03 0.0054991752 Butyricicoccus 1.357370e-03 0.0031145926 Enterococcus_B 1.310733e-03 0.0059365102 Schaedlerella 1.305216e-03 0.0026356164 Desulfovibrio 1.146069e-03 0.0040502698 Enterocloster 1.081652e-03 0.0016014566 CAG-521 1.044864e-03 0.0044915406 Robinsoniella 1.000496e-03 0.0022500094 CAG-279 9.291851e-04 0.0040885460 Enterococcus_E 8.894621e-04 0.0052314621 Fusicatenibacter 8.503089e-04 0.0040305315 Lawsonella 8.377194e-04 0.0044649755 Allisonella 7.734581e-04 0.0017636201 Lactococcus 7.361496e-04 0.0045553482 UMGS1370 7.113596e-04 0.0019148297 Lachnospira 6.870854e-04 0.0021298406 Dorea_B 6.868715e-04 0.0019244447 Bariatricus 6.260243e-04 0.0020974371 UBA9502 6.094947e-04 0.0010769033 Enterococcus 6.047896e-04 0.0038126660 UMGS1472 5.927633e-04 0.0010326554 Emergencia 5.805635e-04 0.0012817363 Succinivibrio 5.598203e-04 0.0022589496 Anaerotignum 5.353989e-04 0.0025028446 CAG-877 5.310297e-04 0.0030198616 Hungatella_A 5.159539e-04 0.0024856275 Evtepia 4.179293e-04 0.0010548717 Eubacterium_M 3.872451e-04 0.0020920297 Ruminococcus_C 3.818769e-04 0.0021783041 Anaerobutyricum 3.713931e-04 0.0007790163 Barnesiella 3.105707e-04 0.0011701232 Butyricimonas 2.993807e-04 0.0011821610 UMGS1872 2.941129e-04 0.0019462982 Mobilibacterium 2.870924e-04 0.0013257840 Fournierella 2.796504e-04 0.0011213974 Eubacterium_H 2.754780e-04 0.0018906167 Caecibacter 2.583579e-04 0.0011470773 Clostridium_A 2.543803e-04 0.0019730949 Helicobacter_C 2.498036e-04 0.0018283330 Paraprevotella 2.348920e-04 0.0018824059 Latilactobacillus 2.222007e-04 0.0021312745 Dorea_A 2.150652e-04 0.0015260870 Zag111 2.130539e-04 0.0017474140 CAG-354 2.052995e-04 0.0007194205 CAG-495 2.050753e-04 0.0018010322 Anaerobiospirillum_A 1.969800e-04 0.0010117016 Peptoniphilus_C 1.797556e-04 0.0017241550 Eubacterium_G 1.536509e-04 0.0010434640 Helicobacter_D 1.489164e-04 0.0009489548 Erysipelatoclostridium 1.469635e-04 0.0005908793 Phocea 1.449534e-04 0.0004735835 Ruminococcus_E 1.382618e-04 0.0012752336 UBA4855 1.362811e-04 0.0007776869 CAG-145 1.215784e-04 0.0004454832 Mailhella 1.175204e-04 0.0005162449 CAG-988 1.150383e-04 0.0008178711 Marseille-P4683 1.140905e-04 0.0005092329 AM07-15 1.059455e-04 0.0004745690 Phascolarctobacterium 1.005920e-04 0.0007816980 Clostridium 9.595775e-05 0.0005366982 Anaerostipes 8.894740e-05 0.0004351045 Parasutterella 8.207495e-05 0.0007872353 CAG-41 7.878665e-05 0.0007556950 Absicoccus 6.676847e-05 0.0002502435 Levilactobacillus 5.757608e-05 0.0005522504 genus_arrange &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=sum(relabun)) %&gt;% filter(genus != &quot;g__&quot;)%&gt;% arrange(-mean) %&gt;% dplyr::select(genus) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% pull() #Per day genus_summary %&gt;% left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% mutate(genus=factor(genus, levels=rev(genus_summary_sort %&gt;% pull(genus)))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors) + geom_jitter(alpha=0.5) + facet_grid(.~Origin)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) "],["alpha-diversity.html", "Chapter 5 Alpha diversity 5.1 Mixed models", " Chapter 5 Alpha diversity load(&quot;data/data.Rdata&quot;) # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) # Aggregate basal GIFT into elements dist &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) functional &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, dist = dist) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(functional = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) %&gt;% mutate(functional = if_else(is.nan(functional), 1, functional)) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample)) %&gt;% full_join(functional, by = join_by(sample == sample)) #Richness alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(!is.na(Location)) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% ggplot(aes(y = value, x = Origin, group=Origin, color=Origin, fill=Origin)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Origin&quot;, breaks=c(&quot;Tame&quot;,&quot;Feral&quot;), values=c(&quot;#6A9AC3&quot;,&quot;#F3B942&quot;)) + scale_fill_manual(name=&quot;Origin&quot;, breaks=c(&quot;Tame&quot;,&quot;Feral&quot;), values=c(&quot;#6A9AC350&quot;,&quot;#F3B94250&quot;)) + facet_wrap(. ~ Location, scales = &quot;fixed&quot;, ncol=6) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1) ) #Neutral alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(!is.na(Location)) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% ggplot(aes(y = value, x = Origin, group=Origin, color=Origin, fill=Origin)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Origin&quot;, breaks=c(&quot;Tame&quot;,&quot;Feral&quot;), values=c(&quot;#6A9AC3&quot;,&quot;#F3B942&quot;)) + scale_fill_manual(name=&quot;Origin&quot;, breaks=c(&quot;Tame&quot;,&quot;Feral&quot;), values=c(&quot;#6A9AC350&quot;,&quot;#F3B94250&quot;)) + facet_wrap(. ~ Location, scales = &quot;fixed&quot;, ncol=6) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1) ) #Phylogenetic alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(!is.na(Location)) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% ggplot(aes(y = value, x = Origin, group=Origin, color=Origin, fill=Origin)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Origin&quot;, breaks=c(&quot;Tame&quot;,&quot;Feral&quot;), values=c(&quot;#6A9AC3&quot;,&quot;#F3B942&quot;)) + scale_fill_manual(name=&quot;Origin&quot;, breaks=c(&quot;Tame&quot;,&quot;Feral&quot;), values=c(&quot;#6A9AC350&quot;,&quot;#F3B94250&quot;)) + facet_wrap(. ~ Location, scales = &quot;fixed&quot;, ncol=6) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1) ) #Functional alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(!is.na(Location)) %&gt;% filter(metric==&quot;functional&quot;) %&gt;% ggplot(aes(y = value, x = Origin, group=Origin, color=Origin, fill=Origin)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Origin&quot;, breaks=c(&quot;Tame&quot;,&quot;Feral&quot;), values=c(&quot;#6A9AC3&quot;,&quot;#F3B942&quot;)) + scale_fill_manual(name=&quot;Origin&quot;, breaks=c(&quot;Tame&quot;,&quot;Feral&quot;), values=c(&quot;#6A9AC350&quot;,&quot;#F3B94250&quot;)) + facet_wrap(. ~ Location, scales = &quot;fixed&quot;, ncol=6) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1) ) 5.1 Mixed models library(MASS) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) Modelq0_all &lt;- MASS::glm.nb(richness ~ Location+Age+F.M+Bites+Hisses+Retreats+Vocalization+Acceptance+Sedating+Healthy+Dry_skin+Stiff+Agile, data = alpha_div_meta,trace=TRUE) anova(Modelq0_all) Deviance = 113.1519 Iterations - 1 Deviance = 111.5845 Iterations - 2 Deviance = 111.5811 Iterations - 3 Deviance = 111.5811 Iterations - 4 Deviance = 74.90231 Iterations - 1 Deviance = 74.03531 Iterations - 2 Deviance = 74.03256 Iterations - 3 Deviance = 74.0325 Iterations - 4 Deviance = 74.0325 Iterations - 5 Deviance = 74.0325 Iterations - 6 Deviance = 74.25986 Iterations - 1 Deviance = 73.26478 Iterations - 2 Deviance = 73.25889 Iterations - 3 Deviance = 73.25873 Iterations - 4 Deviance = 73.25872 Iterations - 5 Deviance = 73.25872 Iterations - 6 Deviance = 71.59786 Iterations - 1 Deviance = 70.73789 Iterations - 2 Deviance = 70.72687 Iterations - 3 Deviance = 70.72649 Iterations - 4 Deviance = 70.72647 Iterations - 5 Deviance = 70.72647 Iterations - 6 Deviance = 70.72647 Iterations - 7 Deviance = 69.615 Iterations - 1 Deviance = 68.8238 Iterations - 2 Deviance = 68.81044 Iterations - 3 Deviance = 68.80994 Iterations - 4 Deviance = 68.80991 Iterations - 5 Deviance = 68.80991 Iterations - 6 Deviance = 68.80991 Iterations - 7 Deviance = 67.21074 Iterations - 1 Deviance = 66.2475 Iterations - 2 Deviance = 66.22154 Iterations - 3 Deviance = 66.21991 Iterations - 4 Deviance = 66.21978 Iterations - 5 Deviance = 66.21977 Iterations - 6 Deviance = 66.21977 Iterations - 7 Deviance = 66.21977 Iterations - 8 Deviance = 63.45142 Iterations - 1 Deviance = 62.62179 Iterations - 2 Deviance = 62.60192 Iterations - 3 Deviance = 62.60057 Iterations - 4 Deviance = 62.60047 Iterations - 5 Deviance = 62.60046 Iterations - 6 Deviance = 62.60046 Iterations - 7 Deviance = 62.60046 Iterations - 8 Deviance = 63.39878 Iterations - 1 Deviance = 62.56405 Iterations - 2 Deviance = 62.54333 Iterations - 3 Deviance = 62.54189 Iterations - 4 Deviance = 62.54178 Iterations - 5 Deviance = 62.54177 Iterations - 6 Deviance = 62.54177 Iterations - 7 Deviance = 62.54177 Iterations - 8 Deviance = 63.39878 Iterations - 1 Deviance = 62.56405 Iterations - 2 Deviance = 62.54333 Iterations - 3 Deviance = 62.54189 Iterations - 4 Deviance = 62.54178 Iterations - 5 Deviance = 62.54177 Iterations - 6 Deviance = 62.54177 Iterations - 7 Deviance = 62.54177 Iterations - 8 Deviance = 55.27351 Iterations - 1 Deviance = 54.5091 Iterations - 2 Deviance = 54.48099 Iterations - 3 Deviance = 54.47865 Iterations - 4 Deviance = 54.47843 Iterations - 5 Deviance = 54.47841 Iterations - 6 Deviance = 54.47841 Iterations - 7 Deviance = 54.47841 Iterations - 8 Deviance = 55.27351 Iterations - 1 Deviance = 54.5091 Iterations - 2 Deviance = 54.48099 Iterations - 3 Deviance = 54.47865 Iterations - 4 Deviance = 54.47843 Iterations - 5 Deviance = 54.47841 Iterations - 6 Deviance = 54.47841 Iterations - 7 Deviance = 54.47841 Iterations - 8 Deviance = 54.74687 Iterations - 1 Deviance = 53.95092 Iterations - 2 Deviance = 53.91848 Iterations - 3 Deviance = 53.91569 Iterations - 4 Deviance = 53.91542 Iterations - 5 Deviance = 53.91539 Iterations - 6 Deviance = 53.91539 Iterations - 7 Deviance = 53.91539 Iterations - 8 Analysis of Deviance Table Model: Negative Binomial(11.2077), link: log Response: richness Terms added sequentially (first to last) Df Deviance Resid. Df Resid. Dev Pr(&gt;Chi) NULL 49 175.035 Location 5 63.454 44 111.581 2.344e-12 *** Age 15 37.549 29 74.032 0.001052 ** F.M 1 0.774 28 73.259 0.379051 Bites 1 2.532 27 70.726 0.111541 Hisses 1 1.917 26 68.810 0.166236 Retreats 1 2.590 25 66.220 0.107531 Vocalization 1 3.619 24 62.600 0.057112 . Acceptance 1 0.059 23 62.542 0.808576 Sedating 0 0.000 23 62.542 Healthy 1 8.063 22 54.478 0.004517 ** Dry_skin 0 0.000 22 54.478 Stiff 1 0.563 21 53.915 0.453046 Agile 1 0.455 20 53.460 0.499859 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Modelq0_Loca &lt;- MASS::glm.nb(richness ~ Location, data = alpha_div_meta,trace=TRUE) anova(Modelq0_Loca) Analysis of Deviance Table Model: Negative Binomial(4.3858), link: log Response: richness Terms added sequentially (first to last) Df Deviance Resid. Df Resid. Dev Pr(&gt;Chi) NULL 91 165.145 Location 5 66.294 86 98.851 6.039e-13 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 r.squaredGLMM(Modelq0_Loca) R2m R2c delta 0.4502528 0.4502528 lognormal 0.4782539 0.4782539 trigamma 0.4193938 0.4193938 emmeans(Modelq0_Loca, pairwise ~ Location) $emmeans Location emmean SE df asymp.LCL asymp.UCL Aruba 3.10 0.131 Inf 2.84 3.35 Brazil 4.31 0.123 Inf 4.07 4.56 CaboVerde 3.46 0.131 Inf 3.21 3.72 Denmark 4.12 0.128 Inf 3.87 4.37 Malaysia 3.84 0.129 Inf 3.59 4.09 Spain 4.26 0.127 Inf 4.01 4.51 Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Aruba - Brazil -1.2183 0.179 Inf -6.793 &lt;.0001 Aruba - CaboVerde -0.3669 0.185 Inf -1.979 0.3541 Aruba - Denmark -1.0272 0.183 Inf -5.624 &lt;.0001 Aruba - Malaysia -0.7420 0.184 Inf -4.041 0.0008 Aruba - Spain -1.1650 0.182 Inf -6.392 &lt;.0001 Brazil - CaboVerde 0.8513 0.180 Inf 4.732 &lt;.0001 Brazil - Denmark 0.1911 0.177 Inf 1.079 0.8899 Brazil - Malaysia 0.4762 0.178 Inf 2.674 0.0805 Brazil - Spain 0.0532 0.177 Inf 0.301 0.9997 CaboVerde - Denmark -0.6603 0.183 Inf -3.604 0.0042 CaboVerde - Malaysia -0.3751 0.184 Inf -2.036 0.3215 CaboVerde - Spain -0.7981 0.183 Inf -4.365 0.0002 Denmark - Malaysia 0.2852 0.181 Inf 1.572 0.6172 Denmark - Spain -0.1378 0.180 Inf -0.766 0.9732 Malaysia - Spain -0.4230 0.181 Inf -2.337 0.1794 Results are given on the log (not the response) scale. P value adjustment: tukey method for comparing a family of 6 estimates detach(&quot;package:MASS&quot;, unload = TRUE) #Modelq1_all &lt;- lm(formula = neutral ~ Location+Age+F.M+Bites+Hisses+Retreats+Vocalization+Acceptance+Sedating+Healthy+Dry_skin+Stiff+Agile, data = alpha_div_meta) #anova(Modelq1_all) Modelq1_Loca &lt;- lm(formula = neutral ~ Location, data = alpha_div_meta) anova(Modelq1_Loca) Analysis of Variance Table Response: neutral Df Sum Sq Mean Sq F value Pr(&gt;F) Location 5 2293.9 458.79 4.6313 0.0008633 *** Residuals 86 8519.3 99.06 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 r.squaredGLMM(Modelq1_Loca) R2m R2c [1,] 0.2028498 0.2028498 emmeans(Modelq1_Loca, pairwise ~ Location) $emmeans Location emmean SE df lower.CL upper.CL Aruba 11.8 2.49 86 6.89 16.8 Brazil 25.5 2.49 86 20.57 30.5 CaboVerde 15.6 2.57 86 10.54 20.8 Denmark 21.5 2.57 86 16.42 26.6 Malaysia 23.1 2.57 86 17.95 28.2 Spain 24.4 2.57 86 19.29 29.5 Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Aruba - Brazil -13.67 3.52 86 -3.886 0.0027 Aruba - CaboVerde -3.81 3.58 86 -1.065 0.8939 Aruba - Denmark -9.69 3.58 86 -2.709 0.0838 Aruba - Malaysia -11.22 3.58 86 -3.137 0.0274 Aruba - Spain -12.56 3.58 86 -3.512 0.0090 Brazil - CaboVerde 9.86 3.58 86 2.758 0.0745 Brazil - Denmark 3.98 3.58 86 1.113 0.8747 Brazil - Malaysia 2.45 3.58 86 0.685 0.9832 Brazil - Spain 1.11 3.58 86 0.311 0.9996 CaboVerde - Denmark -5.88 3.63 86 -1.618 0.5888 CaboVerde - Malaysia -7.41 3.63 86 -2.040 0.3288 CaboVerde - Spain -8.75 3.63 86 -2.408 0.1650 Denmark - Malaysia -1.53 3.63 86 -0.421 0.9982 Denmark - Spain -2.87 3.63 86 -0.790 0.9686 Malaysia - Spain -1.34 3.63 86 -0.368 0.9991 P value adjustment: tukey method for comparing a family of 6 estimates Modelq1p_Loca &lt;- lm(formula = phylogenetic ~ Location, data = alpha_div_meta) anova(Modelq1p_Loca) Analysis of Variance Table Response: phylogenetic Df Sum Sq Mean Sq F value Pr(&gt;F) Location 5 24.334 4.8668 2.1075 0.07216 . Residuals 86 198.600 2.3093 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 r.squaredGLMM(Modelq1p_Loca) R2m R2c [1,] 0.1037786 0.1037786 emmeans(Modelq1p_Loca, pairwise ~ Location) $emmeans Location emmean SE df lower.CL upper.CL Aruba 5.38 0.380 86 4.63 6.14 Brazil 6.18 0.380 86 5.42 6.93 CaboVerde 6.90 0.392 86 6.12 7.68 Denmark 5.51 0.392 86 4.73 6.29 Malaysia 6.25 0.392 86 5.47 7.03 Spain 6.35 0.392 86 5.57 7.13 Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Aruba - Brazil -0.7952 0.537 86 -1.480 0.6778 Aruba - CaboVerde -1.5155 0.546 86 -2.775 0.0714 Aruba - Denmark -0.1290 0.546 86 -0.236 0.9999 Aruba - Malaysia -0.8669 0.546 86 -1.587 0.6091 Aruba - Spain -0.9667 0.546 86 -1.770 0.4904 Brazil - CaboVerde -0.7203 0.546 86 -1.319 0.7738 Brazil - Denmark 0.6662 0.546 86 1.220 0.8260 Brazil - Malaysia -0.0717 0.546 86 -0.131 1.0000 Brazil - Spain -0.1715 0.546 86 -0.314 0.9996 CaboVerde - Denmark 1.3865 0.555 86 2.499 0.1360 CaboVerde - Malaysia 0.6486 0.555 86 1.169 0.8503 CaboVerde - Spain 0.5488 0.555 86 0.989 0.9203 Denmark - Malaysia -0.7379 0.555 86 -1.330 0.7677 Denmark - Spain -0.8377 0.555 86 -1.510 0.6590 Malaysia - Spain -0.0998 0.555 86 -0.180 1.0000 P value adjustment: tukey method for comparing a family of 6 estimates Modelq1F_Loca &lt;- lm(formula = functional ~ Location, data = alpha_div_meta) anova(Modelq1F_Loca) Analysis of Variance Table Response: functional Df Sum Sq Mean Sq F value Pr(&gt;F) Location 5 0.06840 0.0136806 3.422 0.007223 ** Residuals 86 0.34382 0.0039979 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 r.squaredGLMM(Modelq1F_Loca) R2m R2c [1,] 0.1582644 0.1582644 emmeans(Modelq1F_Loca, pairwise ~ Location) $emmeans Location emmean SE df lower.CL upper.CL Aruba 1.42 0.0158 86 1.39 1.46 Brazil 1.44 0.0158 86 1.41 1.48 CaboVerde 1.50 0.0163 86 1.47 1.53 Denmark 1.47 0.0163 86 1.44 1.50 Malaysia 1.49 0.0163 86 1.46 1.53 Spain 1.46 0.0163 86 1.42 1.49 Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Aruba - Brazil -0.01904 0.0224 86 -0.852 0.9566 Aruba - CaboVerde -0.07706 0.0227 86 -3.391 0.0131 Aruba - Denmark -0.04559 0.0227 86 -2.006 0.3475 Aruba - Malaysia -0.06974 0.0227 86 -3.069 0.0331 Aruba - Spain -0.03013 0.0227 86 -1.326 0.7699 Brazil - CaboVerde -0.05801 0.0227 86 -2.553 0.1206 Brazil - Denmark -0.02654 0.0227 86 -1.168 0.8507 Brazil - Malaysia -0.05069 0.0227 86 -2.231 0.2347 Brazil - Spain -0.01108 0.0227 86 -0.488 0.9965 CaboVerde - Denmark 0.03147 0.0231 86 1.363 0.7487 CaboVerde - Malaysia 0.00732 0.0231 86 0.317 0.9996 CaboVerde - Spain 0.04693 0.0231 86 2.033 0.3328 Denmark - Malaysia -0.02415 0.0231 86 -1.046 0.9008 Denmark - Spain 0.01546 0.0231 86 0.669 0.9848 Malaysia - Spain 0.03961 0.0231 86 1.716 0.5255 P value adjustment: tukey method for comparing a family of 6 estimates "],["beta-diversity.html", "Chapter 6 Beta diversity 6.1 Permanova 6.2 Richness diversity plot 6.3 Neutral diversity plot", " Chapter 6 Beta diversity load(&quot;data/data.Rdata&quot;) beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% dplyr::select_if(~!all(. == 0)) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% dplyr::select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% dplyr::select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, tree = genome_tree) beta_q1f &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% dplyr::select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, dist = dist) 6.1 Permanova #Richness betadisper(beta_q0n$C, sample_metadata$Origin) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00649 0.0064888 0.2231 999 0.63 Residuals 90 2.61727 0.0290808 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Feral Tame Feral 0.628 Tame 0.63781 adonis2(beta_q0n$C ~ Origin, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q0n$C))), permutations = 999, strata = sample_metadata %&gt;% arrange(match(sample,labels(beta_q0n$C))) %&gt;% pull(Location)) %&gt;% broom::tidy() %&gt;% tt() tinytable_zjeaxtw5hj9d3tz5dff6 .table td.tinytable_css_8pqbds122ri9jpd7mg4e, .table th.tinytable_css_8pqbds122ri9jpd7mg4e { border-bottom: solid 0.1em #d3d8dc; } term df SumOfSqs R2 statistic p.value Origin 1 0.360299 0.01814891 1.663594 0.211 Residual 90 19.492078 0.98185109 NA NA Total 91 19.852377 1.00000000 NA NA #Neutral diversity betadisper(beta_q1n$C, sample_metadata$Origin) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.01097 0.010969 0.5763 999 0.475 Residuals 90 1.71289 0.019032 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Feral Tame Feral 0.478 Tame 0.44974 adonis2(beta_q1n$C ~ Origin, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1n$C))), permutations = 999, strata = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1n$C))) %&gt;% pull(Location)) %&gt;% broom::tidy() %&gt;% tt() tinytable_xokr43zdeqxxg8cnbu66 .table td.tinytable_css_vonpd6wcuw3o8ay5ttdh, .table th.tinytable_css_vonpd6wcuw3o8ay5ttdh { border-bottom: solid 0.1em #d3d8dc; } term df SumOfSqs R2 statistic p.value Origin 1 0.3587603 0.01623493 1.485257 0.273 Residual 90 21.7392877 0.98376507 NA NA Total 91 22.0980479 1.00000000 NA NA #Phylogenetic diversity betadisper(beta_q1p$C, sample_metadata$Origin) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.01235 0.012355 0.6076 999 0.442 Residuals 90 1.83012 0.020335 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Feral Tame Feral 0.447 Tame 0.43775 adonis2(beta_q1p$C ~ Origin, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1p$C))), permutations = 999, strata = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1p$C))) %&gt;% pull(Location)) %&gt;% broom::tidy() %&gt;% tt() tinytable_8435kbfni79cofbcrhbd .table td.tinytable_css_ftl53j0j6l1hsezodaim, .table th.tinytable_css_ftl53j0j6l1hsezodaim { border-bottom: solid 0.1em #d3d8dc; } term df SumOfSqs R2 statistic p.value Origin 1 0.1824935 0.02489257 2.297522 0.149 Residual 90 7.1487493 0.97510743 NA NA Total 91 7.3312427 1.00000000 NA NA #Functional diversity betadisper(beta_q1f$C, sample_metadata$Origin) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.1982 0.198217 2.7199 999 0.106 Residuals 90 6.5589 0.072877 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Feral Tame Feral 0.101 Tame 0.10259 adonis2(beta_q1f$C ~ Origin, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1f$C))), permutations = 999, strata = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1f$C))) %&gt;% pull(Location)) %&gt;% broom::tidy() %&gt;% tt() tinytable_bcybzdn0ox68bvcta7ot .table td.tinytable_css_37gg984y41pyxfe4skxu, .table th.tinytable_css_37gg984y41pyxfe4skxu { border-bottom: solid 0.1em #d3d8dc; } term df SumOfSqs R2 statistic p.value Origin 1 0.3017094 0.02299117 2.117898 0.236 Residual 90 12.8211288 0.97700883 NA NA Total 91 13.1228382 1.00000000 NA NA 6.2 Richness diversity plot beta_q0n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(Origin,Location) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = Origin, fill = Origin, shape = as.factor(Location))) + scale_color_manual(name=&quot;Origin&quot;, breaks=c(&quot;Tame&quot;,&quot;Feral&quot;), values=c(&quot;#6A9AC3&quot;,&quot;#F3B942&quot;)) + scale_fill_manual(name=&quot;Origin&quot;, breaks=c(&quot;Tame&quot;,&quot;Feral&quot;), values=c(&quot;#6A9AC350&quot;,&quot;#F3B94250&quot;)) + geom_point(size = 4) + # stat_ellipse(aes(color = beta_q1n_nmds$Groups))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9) + theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 20, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 18), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 16), legend.title = element_text(size = 18), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(shape=&quot;Individual&quot;) 6.3 Neutral diversity plot beta_q1n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(Origin,Location) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = Origin, fill = Origin, shape = as.factor(Location))) + scale_color_manual(name=&quot;Origin&quot;, breaks=c(&quot;Tame&quot;,&quot;Feral&quot;), values=c(&quot;#6A9AC3&quot;,&quot;#F3B942&quot;)) + scale_fill_manual(name=&quot;Origin&quot;, breaks=c(&quot;Tame&quot;,&quot;Feral&quot;), values=c(&quot;#6A9AC350&quot;,&quot;#F3B94250&quot;)) + geom_point(size = 4) + # stat_ellipse(aes(color = beta_q1n_nmds$Groups))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9) + theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 20, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 18), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 16), legend.title = element_text(size = 18), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(shape=&quot;Individual&quot;) "],["hmsc-setup.html", "Chapter 7 HMSC setup 7.1 Setup 7.2 Define formulas of the Hmsc model 7.3 Define and Hmsc models 7.4 Define MCMC 7.5 Generate Hmsc executables 7.6 Fit Hmsc models (in Mjolnir HPC)", " Chapter 7 HMSC setup 7.1 Setup load(&quot;data/data.Rdata&quot;) # Random effects data (study design) StudyDesign &lt;- sample_metadata %&gt;% dplyr::select(sample,Location) %&gt;% rename(location=Location) %&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% mutate(location = factor(location)) # Genome count table (quantitative community data) YData &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . +1 )) %&gt;% #add +1 pseudocount to remove zeros mutate(across(where(is.numeric), ~ . / (genome_metadata$length / 150) )) %&gt;% #transform to genome counts mutate(across(where(is.numeric), ~ log(.) )) %&gt;% #log-transform arrange(genome) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(all_of(row.names(StudyDesign))) %&gt;% #filter only faecal samples as.data.frame() %&gt;% t() # transpose # Fixed effects data (explanatory variables) XData &lt;- sample_metadata %&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% mutate(logseqdepth=read_counts %&gt;% #total log-sequencing depth dplyr::select(all_of(row.names(StudyDesign))) %&gt;% colSums() %&gt;% log() ) %&gt;% rename(origin=Origin, sex=F.M) %&gt;% mutate(origin = factor(origin)) %&gt;% mutate(sex = factor(sex)) %&gt;% dplyr::select(origin, sex, logseqdepth) # Genome phylogeny PData &lt;- genome_tree 7.2 Define formulas of the Hmsc model # Fixed effects formula XFormula = ~origin + sex + logseqdepth # Study design rL.location = HmscRandomLevel(units = levels(StudyDesign$location)) 7.3 Define and Hmsc models #Define models model1 = Hmsc(Y=YData, XData = XData, XFormula = XFormula, studyDesign = StudyDesign, phyloTree = PData, ranLevels=list(&quot;location&quot;=rL.location), distr = &quot;normal&quot;, YScale = TRUE) #Save list of models as an R object. model_list = list(model1=model1) if (!dir.exists(&quot;hmsc&quot;)){dir.create(&quot;hmsc&quot;)} save(model_list, file = &quot;hmsc/hmsc.Rdata&quot;) Upload hmsc/hmsc.Rdata to the HPC respecting the directory structure. 7.4 Define MCMC # How often to sample the MCMC MCMC_samples_list = 250 # The number of MCMC steps between each recording sample MCMC_thin_list = 10 # The number of MCMC chains to use nChains = 4 7.5 Generate Hmsc executables The next chunk generates shell files for every combination of model, MCMC samples and MCMM thinning, ready to be launched as SLURM jobs. modelchains &lt;- expand.grid(model = names(model_list), sample = MCMC_samples_list, thin = MCMC_thin_list) if (!dir.exists(&quot;hmsc&quot;)){dir.create(&quot;hmsc&quot;)} for(i in c(1:nrow(modelchains))){ modelname=as.character(modelchains[i,1]) sample=modelchains[i,2] thin=modelchains[i,3] executablename &lt;- paste0(&quot;hmsc/exe_&quot;,modelname,&quot;_&quot;,sample,&quot;_&quot;,thin,&quot;.sh&quot;) fitname &lt;- paste0(&quot;fit_&quot;,modelname,&quot;_&quot;,sample,&quot;_&quot;,thin,&quot;.Rdata&quot;) convname &lt;- paste0(&quot;conv_&quot;,modelname,&quot;_&quot;,sample,&quot;_&quot;,thin,&quot;.Rdata&quot;) model &lt;- paste0(&#39;model_list$&#39;,modelname) psrf.beta.name &lt;- paste0(&quot;psrf.beta.&quot;,modelname,&quot;_&quot;,sample,&quot;_&quot;,thin) psrf.gamma.name &lt;- paste0(&quot;psrf.gamma.&quot;,modelname,&quot;_&quot;,sample,&quot;_&quot;,thin) psrf.rho.name &lt;- paste0(&quot;psrf.rho.&quot;,modelname,&quot;_&quot;,sample,&quot;_&quot;,thin) jobname &lt;- paste0(&quot;hmsc_&quot;,modelname,&quot;_&quot;,sample,&quot;_&quot;,thin) minutes &lt;- 1000 code &lt;- sprintf(&quot;#!/bin/bash #SBATCH --job-name=%s # Job name #SBATCH --nodes=1 #SBATCH --ntasks=4 # Run on 4 CPUs #SBATCH --mail-user=antton.alberdi@sund.ku.dk #SBATCH --mem=96gb # Job memory request #SBATCH --time=%d # In minutes # Activate conda environment module load mamba/1.3.1 source activate /maps/projects/mjolnir1/people/jpl786/AMAC001_fibre_trial/hmsc/hmsc_env # Run R script Rscript -e &#39; library(tidyverse) library(Hmsc) # Load formulas and data load(\\&quot;hmsc.Rdata\\&quot;) # Declare placeholders modelname = \\&quot;%s\\&quot; model = %s fitname = \\&quot;%s\\&quot; convname = \\&quot;%s\\&quot; sample = %d thin = %d nchains = %d # Run model fitting m = sampleMcmc(hM = model, samples = sample, thin = thin, adaptNf=rep(ceiling(0.4*sample*thin),model$nr), transient = ceiling(0.5*sample*thin), nChains = nchains, nParallel = nchains) # Assess chain convergence mpost = convertToCodaObject(m, spNamesNumbers = c(T,F), covNamesNumbers = c(T,F), Beta = TRUE, Gamma = TRUE, V = FALSE, Sigma = FALSE, Rho = TRUE, Eta = FALSE, Lambda = FALSE, Alpha = FALSE, Omega = FALSE, Psi = FALSE, Delta = FALSE) # Convert to CODA object # Fixed effects assign(paste0(\\&quot;psrf.beta.\\&quot;, modelname,\\&quot;_\\&quot;,sample,\\&quot;_\\&quot;,thin), gelman.diag(mpost$Beta,multivariate=FALSE)$psrf) # Traits assign(paste0(\\&quot;psrf.gamma.\\&quot;, modelname,\\&quot;_\\&quot;,sample,\\&quot;_\\&quot;,thin), gelman.diag(mpost$Gamma,multivariate=FALSE)$psrf) # Phylogeny assign(paste0(\\&quot;psrf.rho.\\&quot;, modelname,\\&quot;_\\&quot;,sample,\\&quot;_\\&quot;,thin), gelman.diag(mpost$Rho,multivariate=FALSE)$psrf) # Write convergence data save(%s, %s, %s, file=convname) # Save model fit object save(m, file=fitname) &#39; &quot;, jobname, minutes, modelname, model, fitname, convname, sample, thin, nChains, psrf.beta.name, psrf.gamma.name, psrf.rho.name) writeLines(code, executablename) } Upload the produced hmsc/exe_XXXXX.sh files to the HPC respecting the directory structure. 7.6 Fit Hmsc models (in Mjolnir HPC) Launch the SLURM jobs by using: #Create and define tmpdir tmpdir=&quot;./tmp&quot; mkdir -p &quot;$tmpdir&quot; export TMPDIR=&quot;$tmpdir&quot; #Or launch them one by one only the ones you want to launch sbatch exe_model1_250_1.sh "],["hmsc-analysis.html", "Chapter 8 HMSC analysis 8.1 Load data 8.2 Variance partitioning 8.3 Posterior estimates", " Chapter 8 HMSC analysis 8.1 Load data load(&quot;data/data.Rdata&quot;) load(&quot;hmsc/fit_model1_250_10.Rdata&quot;) 8.2 Variance partitioning # Compute variance partitioning varpart=computeVariancePartitioning(m) varpart$vals %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;variable&quot;) %&gt;% pivot_longer(!variable, names_to = &quot;genome&quot;, values_to = &quot;value&quot;) %&gt;% mutate(variable=factor(variable, levels=rev(c(&quot;origin&quot;,&quot;sex&quot;,&quot;logseqdepth&quot;,&quot;Random: location&quot;)))) %&gt;% group_by(variable) %&gt;% summarise(mean=mean(value)*100,sd=sd(value)*100) %&gt;% tt() tinytable_xs9ib100ukuw9za2fpnl .table td.tinytable_css_heocmia2jrfi191uryn2, .table th.tinytable_css_heocmia2jrfi191uryn2 { border-bottom: solid 0.1em #d3d8dc; } variable mean sd Random: location 37.900015 25.317903 logseqdepth 56.110626 25.796874 sex 4.937460 5.612719 origin 1.051899 1.282563 # Basal tree varpart_tree &lt;- genome_tree #Varpart table varpart_table &lt;- varpart$vals %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;variable&quot;) %&gt;% pivot_longer(!variable, names_to = &quot;genome&quot;, values_to = &quot;value&quot;) %&gt;% mutate(genome=factor(genome, levels=rev(varpart_tree$tip.label))) %&gt;% mutate(variable=factor(variable, levels=rev(c(&quot;origin&quot;,&quot;sex&quot;,&quot;logseqdepth&quot;,&quot;Random: location&quot;)))) #Phylums phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate(phylum=str_remove_all(phylum, &quot;p__&quot;))%&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% filter(genome %in% varpart_tree$tip.label) %&gt;% arrange(match(genome, varpart_tree$tip.label)) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(phylum) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate(phylum=str_remove_all(phylum, &quot;p__&quot;))%&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% filter(genome %in% varpart_tree$tip.label) %&gt;% arrange(match(genome, varpart_tree$tip.label)) %&gt;% dplyr::select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() # Basal ggtree varpart_tree &lt;- varpart_tree %&gt;% force.ultrametric(.,method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** # Add phylum colors next to the tree tips varpart_tree &lt;- gheatmap(varpart_tree, phylum_colors, offset=-0.2, width=0.1, colnames=FALSE) + scale_fill_manual(values=colors_alphabetic)+ labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap varpart_tree &lt;- varpart_tree + new_scale_fill() # Add variance stacked barplot vertical_tree &lt;- varpart_tree + scale_fill_manual(values=c(&quot;#506a96&quot;,&quot;#cccccc&quot;,&quot;#be3e2b&quot;,&quot;#f6de6c&quot;))+ geom_fruit( data=varpart_table, geom=geom_bar, mapping = aes(x=value, y=genome, fill=variable, group=variable), pwidth = 2, offset = 0.05, width= 1, orientation=&quot;y&quot;, stat=&quot;identity&quot;)+ labs(fill=&quot;Variable&quot;) vertical_tree 8.3 Posterior estimates # Select desired support threshold support=0.9 negsupport=1-support # Basal tree postestimates_tree &lt;- genome_tree # Posterior estimate table post_beta &lt;- getPostEstimate(hM=m, parName=&quot;Beta&quot;)$support %&gt;% as.data.frame() %&gt;% mutate(variable=m$covNames) %&gt;% pivot_longer(!variable, names_to = &quot;genome&quot;, values_to = &quot;value&quot;) %&gt;% mutate(genome=factor(genome, levels=rev(postestimates_tree$tip.label))) %&gt;% mutate(value = case_when( value &gt;= support ~ &quot;Positive&quot;, value &lt;= negsupport ~ &quot;Negative&quot;, TRUE ~ &quot;Neutral&quot;)) %&gt;% mutate(value=factor(value, levels=c(&quot;Positive&quot;,&quot;Neutral&quot;,&quot;Negative&quot;))) %&gt;% pivot_wider(names_from = variable, values_from = value) %&gt;% #select(genome,sp_vulgaris,area_semi,area_urban,sp_vulgarisxarea_semi,sp_vulgarisxarea_urban,season_spring,season_winter,sp_vulgarisxseason_spring,sp_vulgarisxseason_winter) %&gt;% column_to_rownames(var=&quot;genome&quot;) #Phylums phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate(phylum=str_remove_all(phylum, &quot;p__&quot;)) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% filter(genome %in% postestimates_tree$tip.label) %&gt;% arrange(match(genome, postestimates_tree$tip.label)) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(phylum) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate(phylum=str_remove_all(phylum, &quot;p__&quot;)) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% filter(genome %in% postestimates_tree$tip.label) %&gt;% arrange(match(genome, postestimates_tree$tip.label)) %&gt;% dplyr::select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() # Basal ggtree postestimates_tree &lt;- postestimates_tree %&gt;% force.ultrametric(.,method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #Add phylum colors next to the tree tips postestimates_tree &lt;- gheatmap(postestimates_tree, phylum_colors, offset=-0.2, width=0.1, colnames=FALSE) + scale_fill_manual(values=colors_alphabetic)+ labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap postestimates_tree &lt;- postestimates_tree + new_scale_fill() # Add posterior significant heatmap postestimates_tree &lt;- gheatmap(postestimates_tree, post_beta, offset=0, width=0.5, colnames=TRUE, colnames_position=&quot;top&quot;,colnames_angle=90, colnames_offset_y=1, hjust=0) + scale_fill_manual(values=c(&quot;#be3e2b&quot;,&quot;#f4f4f4&quot;,&quot;#b2b530&quot;))+ labs(fill=&quot;Trend&quot;) postestimates_tree + vexpand(.25, 1) # expand top 8.3.1 Origin 8.3.1.1 Positively associated genomes with domestic cats getPostEstimate(hM=m, parName=&quot;Beta&quot;)$support %&gt;% as.data.frame() %&gt;% mutate(variable=m$covNames) %&gt;% pivot_longer(!variable, names_to = &quot;genome&quot;, values_to = &quot;value&quot;) %&gt;% mutate(trend = case_when( value &gt;= support ~ &quot;Positive&quot;, value &lt;= negsupport ~ &quot;Negative&quot;, TRUE ~ &quot;Neutral&quot;)) %&gt;% filter(variable==&quot;originTame&quot;, trend==&quot;Positive&quot;) %&gt;% arrange(-value) %&gt;% left_join(genome_metadata,by=join_by(genome==genome)) %&gt;% dplyr::select(genome,phylum,class,order,family,species,value) %&gt;% arrange(phylum, class, family)%&gt;% tt() tinytable_83tmaz02i4zlyz0iz2qb .table td.tinytable_css_ewilm52rtsujlq9dlpmi, .table th.tinytable_css_ewilm52rtsujlq9dlpmi { border-bottom: solid 0.1em #d3d8dc; } genome phylum class order family species value bin_CaboVerde.50 Actinomycetota Actinomycetia Actinomycetales Actinomycetaceae NA 0.953 bin_Aruba.25 Actinomycetota Actinomycetia Actinomycetales Bifidobacteriaceae Bifidobacterium pseudocatenulatum 0.995 bin_Aruba.2 Actinomycetota Actinomycetia Actinomycetales Bifidobacteriaceae Bifidobacterium adolescentis 0.994 bin_Aruba.6 Actinomycetota Actinomycetia Actinomycetales Bifidobacteriaceae Bifidobacterium longum 0.985 bin_Denmark.14 Actinomycetota Actinomycetia Actinomycetales Bifidobacteriaceae Bifidobacterium gallinarum 0.950 bin_Aruba.47 Actinomycetota Actinomycetia Mycobacteriales Mycobacteriaceae NA 0.964 bin_Aruba.57 Actinomycetota Actinomycetia Mycobacteriales Mycobacteriaceae Corynebacterium pyruviciproducens 0.931 bin_Aruba.51 Actinomycetota Coriobacteriia Coriobacteriales Atopobiaceae Parolsenella sp900544655 0.969 bin_Denmark.44 Actinomycetota Coriobacteriia Coriobacteriales Atopobiaceae UBA7748 sp900314535 0.951 bin_Aruba.14 Actinomycetota Coriobacteriia Coriobacteriales Coriobacteriaceae Collinsella stercoris 1.000 bin_Denmark.4 Actinomycetota Coriobacteriia Coriobacteriales Coriobacteriaceae Collinsella stercoris 1.000 bin_Aruba.21 Actinomycetota Coriobacteriia Coriobacteriales Coriobacteriaceae NA 0.999 bin_Brazil.61 Actinomycetota Coriobacteriia Coriobacteriales Coriobacteriaceae Collinsella tanakaei 0.998 bin_Aruba.39 Actinomycetota Coriobacteriia Coriobacteriales Coriobacteriaceae Collinsella sp902362275 0.992 bin_Spain.84 Actinomycetota Coriobacteriia Coriobacteriales Coriobacteriaceae Collinsella sp900555555 0.992 bin_Brazil.151 Actinomycetota Coriobacteriia Coriobacteriales Coriobacteriaceae Collinsella intestinalis 0.991 bin_Denmark.127 Actinomycetota Coriobacteriia Coriobacteriales Coriobacteriaceae Collinsella sp900548365 0.991 bin_Denmark.17 Actinomycetota Coriobacteriia Coriobacteriales Coriobacteriaceae Collinsella bouchesdurhonensis 0.983 bin_Brazil.81 Bacillota Bacilli RFN20 CAG-826 NA 0.907 bin_Brazil.109 Bacillota_A Clostridia Oscillospirales Butyricicoccaceae AM07-15 sp003477405 0.936 bin_Aruba.28 Bacillota_A Clostridia Oscillospirales Oscillospiraceae NA 0.995 bin_Malaysia.9 Bacillota_A Clostridia Oscillospirales Oscillospiraceae Dysosmobacter welbionis 0.986 bin_Malaysia.116 Bacillota_A Clostridia Oscillospirales Oscillospiraceae Flavonifractor plautii 0.981 bin_Malaysia.34 Bacillota_A Clostridia Oscillospirales Oscillospiraceae Lawsonibacter sp000177015 0.954 bin_Aruba.54 Bacillota_A Clostridia Tissierellales Peptoniphilaceae NA 0.959 bin_CaboVerde.35 Bacillota_A Clostridia Tissierellales Peptoniphilaceae NA 0.930 bin_Aruba.36 Bacillota_A Clostridia Tissierellales Peptoniphilaceae Peptoniphilus_C sp902363535 0.913 bin_Aruba.52 Bacillota_A Clostridia Tissierellales Peptoniphilaceae NA 0.906 bin_Malaysia.26 Bacillota_A Clostridia Oscillospirales Ruminococcaceae NA 0.976 bin_Aruba.29 Bacillota_A Clostridia Oscillospirales Ruminococcaceae Gemmiger variabilis_C 0.941 bin_Malaysia.103 Bacillota_C Negativicutes Acidaminococcales Acidaminococcaceae Acidaminococcus intestini 0.942 bin_Malaysia.8 Bacillota_C Negativicutes Veillonellales Dialisteraceae Dialister sp900543165 0.981 bin_Denmark.60 Bacillota_C Negativicutes Veillonellales Dialisteraceae Allisonella histaminiformans 0.938 bin_Aruba.64 Bacillota_C Negativicutes Veillonellales Megasphaeraceae Megasphaera sp000417505 0.970 bin_Brazil.58 Bacillota_C Negativicutes Veillonellales Megasphaeraceae Megasphaera elsdenii 0.969 bin_CaboVerde.38 Bacillota_C Negativicutes Veillonellales Megasphaeraceae Megasphaera sp000417505 0.961 bin_Malaysia.81 Bacillota_C Negativicutes Veillonellales Megasphaeraceae Megasphaera stantonii 0.943 bin_Malaysia.96 Bacillota_C Negativicutes Veillonellales Megasphaeraceae Caecibacter sp003467125 0.919 bin_Brazil.163 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Prevotella lascolaii 0.992 bin_CaboVerde.18 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Prevotella copri 0.981 bin_Aruba.10 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Prevotella sp900544825 0.978 bin_Brazil.5 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Prevotella sp900540415 0.929 bin_Spain.21 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Phocaeicola coprophilus 0.929 bin_Malaysia.18 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Prevotellamassilia sp000437675 0.924 bin_Malaysia.117 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Prevotellamassilia sp900541335 0.919 bin_Malaysia.77 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Phocaeicola sp900542985 0.913 bin_Brazil.75 Campylobacterota Campylobacteria Campylobacterales Helicobacteraceae NA 0.964 bin_Malaysia.61 Campylobacterota Campylobacteria Campylobacterales Helicobacteraceae Helicobacter_C labetoulli 0.964 bin_Brazil.128 Campylobacterota Campylobacteria Campylobacterales Helicobacteraceae NA 0.963 bin_Brazil.70 Desulfobacterota Desulfovibrionia Desulfovibrionales Desulfovibrionaceae Mailhella sp003150275 0.944 bin_Brazil.146 Pseudomonadota Alphaproteobacteria RF32 CAG-239 CAG-495 sp001917125 0.969 bin_Brazil.9 Pseudomonadota Alphaproteobacteria RF32 CAG-239 CAG-495 sp000436375 0.919 bin_Aruba.15 Pseudomonadota Gammaproteobacteria Burkholderiales Burkholderiaceae NA 0.963 bin_Brazil.51 Pseudomonadota Gammaproteobacteria Burkholderiales Burkholderiaceae Sutterella wadsworthensis_A 0.963 bin_Spain.43 Pseudomonadota Gammaproteobacteria Burkholderiales Burkholderiaceae CAG-521 sp000437635 0.959 bin_Brazil.64 Pseudomonadota Gammaproteobacteria Burkholderiales Burkholderiaceae NA 0.948 bin_Brazil.92 Pseudomonadota Gammaproteobacteria Burkholderiales Burkholderiaceae CAG-521 sp000437635 0.948 bin_Brazil.15 Pseudomonadota Gammaproteobacteria Burkholderiales Burkholderiaceae NA 0.930 bin_CaboVerde.33 Pseudomonadota Gammaproteobacteria Enterobacterales Succinivibrionaceae Anaerobiospirillum sp900543125 0.995 bin_Brazil.82 Pseudomonadota Gammaproteobacteria Enterobacterales Succinivibrionaceae Anaerobiospirillum succiniciproducens 0.990 bin_CaboVerde.55 Pseudomonadota Gammaproteobacteria Enterobacterales Succinivibrionaceae Anaerobiospirillum_A thomasii 0.939 8.3.1.2 Positively associated genomes feral cats getPostEstimate(hM=m, parName=&quot;Beta&quot;)$support %&gt;% as.data.frame() %&gt;% mutate(variable=m$covNames) %&gt;% pivot_longer(!variable, names_to = &quot;genome&quot;, values_to = &quot;value&quot;) %&gt;% mutate(trend = case_when( value &gt;= support ~ &quot;Positive&quot;, value &lt;= negsupport ~ &quot;Negative&quot;, TRUE ~ &quot;Neutral&quot;)) %&gt;% filter(variable==&quot;originTame&quot;, trend==&quot;Negative&quot;) %&gt;% arrange(value) %&gt;% left_join(genome_metadata,by=join_by(genome==genome)) %&gt;% dplyr::select(genome,phylum,class,order,family,species,value) %&gt;% arrange(phylum,class,family)%&gt;% tt() tinytable_1eojf601n6x2v5g6xp6z .table td.tinytable_css_hzb4i5d7po6g8koyp5jo, .table th.tinytable_css_hzb4i5d7po6g8koyp5jo { border-bottom: solid 0.1em #d3d8dc; } genome phylum class order family species value bin_Denmark.27 Bacillota Bacilli Lactobacillales Enterococcaceae Enterococcus_B hirae 0.000 bin_Brazil.12 Bacillota Bacilli Lactobacillales Enterococcaceae Enterococcus faecalis 0.001 bin_Brazil.170 Bacillota Bacilli Lactobacillales Enterococcaceae NA 0.014 bin_CaboVerde.24 Bacillota Bacilli Lactobacillales Enterococcaceae Enterococcus_E cecorum 0.020 bin_CaboVerde.16 Bacillota Bacilli Lactobacillales Lactobacillaceae Limosilactobacillus reuteri 0.000 bin_Denmark.56 Bacillota Bacilli Lactobacillales Lactobacillaceae Levilactobacillus brevis 0.000 bin_Malaysia.72 Bacillota Bacilli Lactobacillales Lactobacillaceae Limosilactobacillus reuteri 0.000 bin_CaboVerde.60 Bacillota Bacilli Lactobacillales Lactobacillaceae Ligilactobacillus agilis 0.001 bin_Malaysia.127 Bacillota Bacilli Lactobacillales Lactobacillaceae Ligilactobacillus agilis 0.001 bin_Denmark.61 Bacillota Bacilli Lactobacillales Lactobacillaceae Latilactobacillus sakei 0.003 bin_Malaysia.35 Bacillota Bacilli Lactobacillales Lactobacillaceae Ligilactobacillus animalis 0.003 bin_Malaysia.4 Bacillota Bacilli Lactobacillales Lactobacillaceae Ligilactobacillus ruminis 0.035 bin_CaboVerde.14 Bacillota Bacilli Lactobacillales Lactobacillaceae Lactobacillus acidophilus 0.067 bin_Aruba.18 Bacillota Bacilli Lactobacillales Streptococcaceae Streptococcus lutetiensis 0.001 bin_Brazil.22 Bacillota Bacilli Lactobacillales Streptococcaceae Streptococcus pasteurianus 0.001 bin_Denmark.117 Bacillota Bacilli Lactobacillales Streptococcaceae Lactococcus garvieae 0.001 bin_Denmark.113 Bacillota Bacilli Lactobacillales Streptococcaceae Streptococcus alactolyticus 0.002 bin_Brazil.69 Bacillota_A Clostridia Oscillospirales Acutalibacteraceae Clostridium_A leptum 0.097 bin_Denmark.93 Bacillota_A Clostridia Lachnospirales Anaerotignaceae Anaerotignum sp001304995 0.074 bin_CaboVerde.3 Bacillota_A Clostridia Clostridiales Clostridiaceae Clostridium_P perfringens 0.000 bin_Denmark.42 Bacillota_A Clostridia Clostridiales Clostridiaceae Clostridium_P perfringens 0.000 bin_Brazil.136 Bacillota_A Clostridia Clostridiales Clostridiaceae Clostridium thermobutyricum 0.041 bin_Brazil.3 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Faecalimonas sp900555395 0.026 bin_Brazil.89 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Faecalimonas sp900550235 0.034 bin_Denmark.63 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Anaerostipes hadrus 0.040 bin_Denmark.19 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Faecalimonas sp900556835 0.052 bin_Denmark.118 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Dorea_A longicatena 0.067 bin_Malaysia.108 Bacillota_A Clostridia Lachnospirales Lachnospiraceae NA 0.081 bin_Brazil.113 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Anaerobutyricum sp900754855 0.095 bin_Denmark.50 Bacillota_A Clostridia Peptostreptococcales Peptostreptococcaceae Peptacetobacter sp900539645 0.053 bin_Brazil.107 Bacillota_A Clostridia Monoglobales_A UBA1381 CAG-41 sp900066215 0.016 bin_Brazil.159 Fusobacteriota Fusobacteriia Fusobacteriales Fusobacteriaceae Fusobacterium_B sp900541465 0.040 bin_Brazil.140 Fusobacteriota Fusobacteriia Fusobacteriales Fusobacteriaceae Fusobacterium_A sp900543175 0.046 bin_Malaysia.6 Fusobacteriota Fusobacteriia Fusobacteriales Fusobacteriaceae Fusobacterium_B sp900545035 0.088 8.3.1.3 Estimate - support plot estimate &lt;- getPostEstimate(hM=m, parName=&quot;Beta&quot;)$mean %&gt;% as.data.frame() %&gt;% mutate(variable=m$covNames) %&gt;% filter(variable==&quot;originTame&quot;) %&gt;% pivot_longer(!variable, names_to = &quot;genome&quot;, values_to = &quot;mean&quot;) %&gt;% dplyr::select(genome,mean) support &lt;- getPostEstimate(hM=m, parName=&quot;Beta&quot;)$support %&gt;% as.data.frame() %&gt;% mutate(variable=m$covNames) %&gt;% filter(variable==&quot;originTame&quot;) %&gt;% pivot_longer(!variable, names_to = &quot;genome&quot;, values_to = &quot;support&quot;) %&gt;% dplyr::select(genome,support) phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate(phylum=str_remove_all(phylum, &quot;p__&quot;)) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% filter(genome %in% estimate$genome) %&gt;% arrange(match(genome, estimate$genome)) %&gt;% dplyr::select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() inner_join(estimate,support,by=join_by(genome==genome)) %&gt;% mutate(significance=ifelse(support &gt;= 0.9 | support &lt;= 0.1,1,0)) %&gt;% mutate(support=ifelse(mean&lt;0,1-support,support)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% mutate(phylum = ifelse(support &gt; 0.9, phylum, NA)) %&gt;% ggplot(aes(x=mean,y=support,color=phylum))+ geom_point(alpha=0.7, shape=16, size=3)+ scale_color_manual(values = phylum_colors) + geom_vline(xintercept = 0) + xlim(c(-0.4,0.4)) + labs(x = &quot;Beta regression coefficient&quot;, y = &quot;Posterior probability&quot;) + theme_minimal()+ theme(legend.position = &quot;none&quot;) 8.3.1.4 Correlations #Compute the residual correlation matrix OmegaCor = computeAssociations(m) # Refernece tree (for sorting genomes) genome_tree_subset &lt;- genome_tree %&gt;% keep.tip(., tip=m$spNames) #Co-occurrence matrix at the animal level supportLevel = 0.95 toPlot = ((OmegaCor[[1]]$support&gt;supportLevel) + (OmegaCor[[1]]$support&lt;(1-supportLevel))&gt;0)*OmegaCor[[1]]$mean matrix &lt;- toPlot %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;genome1&quot;) %&gt;% pivot_longer(!genome1, names_to = &quot;genome2&quot;, values_to = &quot;cor&quot;) %&gt;% mutate(genome1= factor(genome1, levels=genome_tree_subset$tip.label)) %&gt;% mutate(genome2= factor(genome2, levels=genome_tree_subset$tip.label)) %&gt;% ggplot(aes(x = genome1, y = genome2, fill = cor)) + geom_tile() + scale_fill_gradient2(low = &quot;#be3e2b&quot;, mid = &quot;#f4f4f4&quot;, high = &quot;#b2b530&quot;)+ theme_void() htree &lt;- genome_tree_subset %&gt;% force.ultrametric(.,method=&quot;extend&quot;) %&gt;% ggtree(.) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** vtree &lt;- genome_tree_subset %&gt;% force.ultrametric(.,method=&quot;extend&quot;) %&gt;% ggtree(.) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #create composite figure grid.arrange(grobs = list(matrix,vtree), layout_matrix = rbind(c(2,1,1,1,1,1,1,1,1,1,1,1), c(2,1,1,1,1,1,1,1,1,1,1,1), c(2,1,1,1,1,1,1,1,1,1,1,1), c(2,1,1,1,1,1,1,1,1,1,1,1), c(2,1,1,1,1,1,1,1,1,1,1,1), c(2,1,1,1,1,1,1,1,1,1,1,1), c(2,1,1,1,1,1,1,1,1,1,1,1), c(2,1,1,1,1,1,1,1,1,1,1,1), c(2,1,1,1,1,1,1,1,1,1,1,1), c(2,1,1,1,1,1,1,1,1,1,1,1), c(2,1,1,1,1,1,1,1,1,1,1,1))) 8.3.1.5 Predict responses (origin) # Select modelchain of interest load(&quot;hmsc/fit_model1_250_10.Rdata&quot;) gradient = c(&quot;domestic&quot;,&quot;feral&quot;) gradientlength = length(gradient) #Treatment-specific gradient predictions pred &lt;- constructGradient(m, focalVariable = &quot;origin&quot;, non.focalVariables = list(logseqdepth=list(1),location=list(1))) %&gt;% predict(m, Gradient = ., expected = TRUE) %&gt;% do.call(rbind,.) %&gt;% as.data.frame() %&gt;% mutate(origin=rep(gradient,1000)) %&gt;% pivot_longer(!origin,names_to = &quot;genome&quot;, values_to = &quot;value&quot;) # weights: 9 (4 variable) initial value 101.072331 final value 91.392443 converged 8.3.1.6 Element level elements_table &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) %&gt;% as.data.frame() community_elements &lt;- pred %&gt;% group_by(origin, genome) %&gt;% mutate(row_id = row_number()) %&gt;% pivot_wider(names_from = genome, values_from = value) %&gt;% ungroup() %&gt;% group_split(row_id) %&gt;% as.list() %&gt;% lapply(., FUN = function(x){x %&gt;% dplyr::select(-row_id) %&gt;% column_to_rownames(var = &quot;origin&quot;) %&gt;% as.data.frame() %&gt;% exp() %&gt;% t() %&gt;% tss() %&gt;% to.community(elements_table,.,GIFT_db) %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;origin&quot;) }) calculate_slope &lt;- function(x) { lm_fit &lt;- lm(unlist(x) ~ seq_along(unlist(x))) coef(lm_fit)[2] } element_predictions &lt;- map_dfc(community_elements, function(mat) { mat %&gt;% column_to_rownames(var = &quot;origin&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% rowwise() %&gt;% mutate(slope = calculate_slope(c_across(everything()))) %&gt;% dplyr::select(slope) }) %&gt;% t() %&gt;% as.data.frame() %&gt;% set_names(colnames(community_elements[[1]])[-1]) %&gt;% rownames_to_column(var=&quot;iteration&quot;) %&gt;% pivot_longer(!iteration, names_to=&quot;trait&quot;,values_to=&quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(mean=mean(value), p1 = quantile(value, probs = 0.1), p9 = quantile(value, probs = 0.9), positive_support = sum(value &gt; 0)/1000, negative_support = sum(value &lt; 0)/1000) %&gt;% arrange(-positive_support) 8.3.1.6.1 Positive associated functions at element level # Positively associated unique_funct_db&lt;- GIFT_db[c(2,4,5,6)] %&gt;% distinct(Code_element, .keep_all = TRUE) element_predictions %&gt;% filter(mean &gt;0) %&gt;% arrange(-positive_support) %&gt;% filter(positive_support&gt;=0.9) %&gt;% left_join(unique_funct_db, by = join_by(trait == Code_element))%&gt;% arrange(Domain,Function)%&gt;% tt() tinytable_aez3gse9x22prge1df10 .table td.tinytable_css_lh11375go2z1xqnlu6sd, .table th.tinytable_css_lh11375go2z1xqnlu6sd { border-bottom: solid 0.1em #d3d8dc; } trait mean p1 p9 positive_support negative_support Domain Function Element B0103 0.008668973 0.0005965939 0.016001173 0.915 0.085 Biosynthesis Nucleic acid biosynthesis UDP/UTP D0504 0.004647085 0.0003771070 0.009768176 0.922 0.078 Degradation Amino acid degradation Methionine D0906 0.003822519 0.0002160812 0.008201395 0.932 0.068 Degradation Antibiotic degradation Fosfomycin D0205 0.012204272 0.0019631234 0.022408114 0.950 0.050 Degradation Polysaccharide degradation Pectin D0208 0.009799367 0.0014936231 0.017659224 0.939 0.061 Degradation Polysaccharide degradation Mixed-Linkage glucans element_predictions %&gt;% filter(mean &lt;0) %&gt;% arrange(-negative_support) %&gt;% filter(negative_support&gt;=0.9) %&gt;% left_join(unique_funct_db, by = join_by(trait == Code_element))%&gt;% arrange(Domain,Function)%&gt;% tt() tinytable_3oyen1nuof4fzv4ydsif .table td.tinytable_css_h0exe1oh0a6b244qt7q1, .table th.tinytable_css_h0exe1oh0a6b244qt7q1 { border-bottom: solid 0.1em #d3d8dc; } trait mean p1 p9 positive_support negative_support Domain Function Element B0219 -0.004132651 -0.009242449 -2.704579e-04 0.044 0.956 Biosynthesis Amino acid biosynthesis GABA B0214 -0.021408344 -0.038627047 -4.942490e-03 0.059 0.941 Biosynthesis Amino acid biosynthesis Glutamate B0204 -0.016044178 -0.032154456 -1.338553e-03 0.082 0.918 Biosynthesis Amino acid biosynthesis Serine B0302 -0.004993799 -0.010547888 -6.852718e-04 0.032 0.968 Biosynthesis Amino acid derivative biosynthesis Betaine B0310 -0.012631605 -0.022578453 -3.174742e-03 0.035 0.965 Biosynthesis Amino acid derivative biosynthesis Tryptamine B0303 -0.011515181 -0.020902183 -2.246292e-03 0.066 0.934 Biosynthesis Amino acid derivative biosynthesis Ectoine B0309 -0.007441518 -0.015073476 -1.638992e-04 0.095 0.905 Biosynthesis Amino acid derivative biosynthesis Putrescine B0804 -0.016343376 -0.029354205 -3.591691e-03 0.049 0.951 Biosynthesis Aromatic compound biosynthesis Dipicolinate B0603 -0.016580393 -0.031741463 -2.636490e-03 0.060 0.940 Biosynthesis Organic anion biosynthesis Citrate B0601 -0.009240453 -0.017544737 -1.391204e-03 0.069 0.931 Biosynthesis Organic anion biosynthesis Succinate B0401 -0.011102735 -0.022069357 -2.102256e-04 0.094 0.906 Biosynthesis SCFA biosynthesis Acetate B0709 -0.002073624 -0.003638992 -6.474296e-04 0.033 0.967 Biosynthesis Vitamin biosynthesis Tocopherol/tocotorienol (E) D0517 -0.004495743 -0.007874479 -1.353705e-03 0.023 0.977 Degradation Amino acid degradation Ornithine D0508 -0.003245058 -0.007138266 -1.816237e-04 0.079 0.921 Degradation Amino acid degradation Lysine D0512 -0.018089246 -0.035972853 -1.186182e-03 0.086 0.914 Degradation Amino acid degradation Histidine D0903 -0.004117914 -0.009256580 -2.622164e-04 0.044 0.956 Degradation Antibiotic degradation Cephalosporin D0908 -0.015447072 -0.027438899 -3.764076e-03 0.056 0.944 Degradation Antibiotic degradation Macrolide D0601 -0.009517923 -0.017285585 -2.651368e-03 0.024 0.976 Degradation Nitrogen compound degradation Nitrate D0603 -0.001981904 -0.003844551 -3.973787e-04 0.036 0.964 Degradation Nitrogen compound degradation Urate D0610 -0.002955038 -0.004863991 -1.021881e-03 0.039 0.961 Degradation Nitrogen compound degradation Methylamine D0611 -0.004117914 -0.009256580 -2.622164e-04 0.044 0.956 Degradation Nitrogen compound degradation Phenylethylamine D0606 -0.005881451 -0.011632320 -9.896364e-04 0.063 0.937 Degradation Nitrogen compound degradation Allantoin D0612 -0.001574312 -0.002955348 -1.518534e-04 0.076 0.924 Degradation Nitrogen compound degradation Hypotaurine D0801 -0.001305868 -0.002159595 -9.074796e-05 0.008 0.992 Degradation Xenobiotic degradation Toluene D0802 -0.001305868 -0.002159595 -9.074796e-05 0.008 0.992 Degradation Xenobiotic degradation Xylene D0807 -0.004098974 -0.008643808 -7.646272e-04 0.043 0.957 Degradation Xenobiotic degradation Catechol D0817 -0.004953919 -0.010591016 -6.720724e-04 0.049 0.951 Degradation Xenobiotic degradation Trans-cinnamate D0816 -0.005871819 -0.011500014 -4.581529e-04 0.083 0.917 Degradation Xenobiotic degradation Phenylacetate 8.3.1.6.2 Negatively associated functions at element level element_predictions %&gt;% filter(mean &lt;0) %&gt;% arrange(-negative_support) %&gt;% filter(negative_support&gt;=0.9) %&gt;% left_join(unique_funct_db, by = join_by(trait == Code_element))%&gt;% arrange(Domain,Function)%&gt;% tt() tinytable_jjjw1cnk4hd23g99arcg .table td.tinytable_css_k8mlctbb4ln51obkyv3g, .table th.tinytable_css_k8mlctbb4ln51obkyv3g { border-bottom: solid 0.1em #d3d8dc; } trait mean p1 p9 positive_support negative_support Domain Function Element B0219 -0.004132651 -0.009242449 -2.704579e-04 0.044 0.956 Biosynthesis Amino acid biosynthesis GABA B0214 -0.021408344 -0.038627047 -4.942490e-03 0.059 0.941 Biosynthesis Amino acid biosynthesis Glutamate B0204 -0.016044178 -0.032154456 -1.338553e-03 0.082 0.918 Biosynthesis Amino acid biosynthesis Serine B0302 -0.004993799 -0.010547888 -6.852718e-04 0.032 0.968 Biosynthesis Amino acid derivative biosynthesis Betaine B0310 -0.012631605 -0.022578453 -3.174742e-03 0.035 0.965 Biosynthesis Amino acid derivative biosynthesis Tryptamine B0303 -0.011515181 -0.020902183 -2.246292e-03 0.066 0.934 Biosynthesis Amino acid derivative biosynthesis Ectoine B0309 -0.007441518 -0.015073476 -1.638992e-04 0.095 0.905 Biosynthesis Amino acid derivative biosynthesis Putrescine B0804 -0.016343376 -0.029354205 -3.591691e-03 0.049 0.951 Biosynthesis Aromatic compound biosynthesis Dipicolinate B0603 -0.016580393 -0.031741463 -2.636490e-03 0.060 0.940 Biosynthesis Organic anion biosynthesis Citrate B0601 -0.009240453 -0.017544737 -1.391204e-03 0.069 0.931 Biosynthesis Organic anion biosynthesis Succinate B0401 -0.011102735 -0.022069357 -2.102256e-04 0.094 0.906 Biosynthesis SCFA biosynthesis Acetate B0709 -0.002073624 -0.003638992 -6.474296e-04 0.033 0.967 Biosynthesis Vitamin biosynthesis Tocopherol/tocotorienol (E) D0517 -0.004495743 -0.007874479 -1.353705e-03 0.023 0.977 Degradation Amino acid degradation Ornithine D0508 -0.003245058 -0.007138266 -1.816237e-04 0.079 0.921 Degradation Amino acid degradation Lysine D0512 -0.018089246 -0.035972853 -1.186182e-03 0.086 0.914 Degradation Amino acid degradation Histidine D0903 -0.004117914 -0.009256580 -2.622164e-04 0.044 0.956 Degradation Antibiotic degradation Cephalosporin D0908 -0.015447072 -0.027438899 -3.764076e-03 0.056 0.944 Degradation Antibiotic degradation Macrolide D0601 -0.009517923 -0.017285585 -2.651368e-03 0.024 0.976 Degradation Nitrogen compound degradation Nitrate D0603 -0.001981904 -0.003844551 -3.973787e-04 0.036 0.964 Degradation Nitrogen compound degradation Urate D0610 -0.002955038 -0.004863991 -1.021881e-03 0.039 0.961 Degradation Nitrogen compound degradation Methylamine D0611 -0.004117914 -0.009256580 -2.622164e-04 0.044 0.956 Degradation Nitrogen compound degradation Phenylethylamine D0606 -0.005881451 -0.011632320 -9.896364e-04 0.063 0.937 Degradation Nitrogen compound degradation Allantoin D0612 -0.001574312 -0.002955348 -1.518534e-04 0.076 0.924 Degradation Nitrogen compound degradation Hypotaurine D0801 -0.001305868 -0.002159595 -9.074796e-05 0.008 0.992 Degradation Xenobiotic degradation Toluene D0802 -0.001305868 -0.002159595 -9.074796e-05 0.008 0.992 Degradation Xenobiotic degradation Xylene D0807 -0.004098974 -0.008643808 -7.646272e-04 0.043 0.957 Degradation Xenobiotic degradation Catechol D0817 -0.004953919 -0.010591016 -6.720724e-04 0.049 0.951 Degradation Xenobiotic degradation Trans-cinnamate D0816 -0.005871819 -0.011500014 -4.581529e-04 0.083 0.917 Degradation Xenobiotic degradation Phenylacetate positive &lt;- element_predictions %&gt;% filter(mean &gt;0) %&gt;% arrange(mean) %&gt;% filter(positive_support&gt;=0.9) %&gt;% dplyr::select(-negative_support) %&gt;% rename(support=positive_support) negative &lt;- element_predictions %&gt;% filter(mean &lt;0) %&gt;% arrange(mean) %&gt;% filter(negative_support&gt;=0.9) %&gt;% dplyr::select(-positive_support) %&gt;% rename(support=negative_support) bind_rows(positive,negative) %&gt;% left_join(GIFT_db,by=join_by(trait==Code_element)) %&gt;% mutate(trait=factor(trait,levels=c(rev(positive$trait),rev(negative$trait)))) %&gt;% ggplot(aes(x=mean, y=fct_rev(trait), xmin=p1, xmax=p9, color=Function)) + geom_point() + geom_errorbar() + xlim(c(-0.04,0.04)) + geom_vline(xintercept=0) + scale_color_manual(values = c(&quot;#debc14&quot;,&quot;#440526&quot;,&quot;#dc7c17&quot;,&quot;#172742&quot;,&quot;#debc14&quot;,&quot;#440526&quot;,&quot;#dc7c17&quot;,&quot;#172742&quot;,&quot;#357379&quot;,&quot;#6c7e2c&quot;,&quot;#d8dc69&quot;,&quot;#774d35&quot;,&quot;#db717d&quot;)) + theme_minimal() + labs(x=&quot;Regression coefficient&quot;,y=&quot;Functional trait&quot;) table &lt;- bind_rows(positive,negative) %&gt;% left_join(unique_funct_db,by=join_by(trait==Code_element)) %&gt;% mutate(trait=factor(trait,levels=c(rev(positive$trait),rev(negative$trait)))) table %&gt;% mutate(Element=factor(Element,levels=c(table$Element))) %&gt;% ggplot(aes(x=mean, y=fct_rev(Element), xmin=p1, xmax=p9, color=Function)) + geom_point() + geom_errorbar() + xlim(c(-0.04,0.04)) + geom_vline(xintercept=0) + scale_color_manual(values = c(&quot;#debc14&quot;,&quot;#440526&quot;,&quot;#dc7c17&quot;,&quot;#172742&quot;,&quot;#debc14&quot;,&quot;#440526&quot;,&quot;#dc7c17&quot;,&quot;#172742&quot;,&quot;#357379&quot;,&quot;#6c7e2c&quot;,&quot;#d8dc69&quot;,&quot;#774d35&quot;,&quot;#db717d&quot;)) + theme_minimal() + labs(x=&quot;Regression coefficient&quot;,y=&quot;Functional trait&quot;) 8.3.1.7 Function level functions_table &lt;- elements_table %&gt;% to.functions(., GIFT_db) %&gt;% as.data.frame() community_functions &lt;- pred %&gt;% group_by(origin, genome) %&gt;% mutate(row_id = row_number()) %&gt;% pivot_wider(names_from = genome, values_from = value) %&gt;% ungroup() %&gt;% group_split(row_id) %&gt;% as.list() %&gt;% lapply(., FUN = function(x){x %&gt;% dplyr::select(-row_id) %&gt;% column_to_rownames(var = &quot;origin&quot;) %&gt;% as.data.frame() %&gt;% exp() %&gt;% t() %&gt;% tss() %&gt;% to.community(functions_table,.,GIFT_db) %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;origin&quot;) }) #max-min option calculate_slope &lt;- function(x) { lm_fit &lt;- lm(unlist(x) ~ seq_along(unlist(x))) coef(lm_fit)[2] } function_predictions &lt;- map_dfc(community_functions, function(mat) { mat %&gt;% column_to_rownames(var = &quot;origin&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% rowwise() %&gt;% mutate(slope = calculate_slope(c_across(everything()))) %&gt;% dplyr::select(slope) }) %&gt;% t() %&gt;% as.data.frame() %&gt;% set_names(colnames(community_functions[[1]])[-1]) %&gt;% rownames_to_column(var=&quot;iteration&quot;) %&gt;% pivot_longer(!iteration, names_to=&quot;trait&quot;,values_to=&quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(mean=mean(value), p1 = quantile(value, probs = 0.1), p9 = quantile(value, probs = 0.9), positive_support = sum(value &gt; 0)/1000, negative_support = sum(value &lt; 0)/1000) %&gt;% arrange(-positive_support) # Positively associated function_predictions %&gt;% filter(mean &gt;0) %&gt;% arrange(-positive_support) %&gt;% tt() tinytable_tk7jnsi0uenfjp88zy7f .table td.tinytable_css_mmgz33jo7358w6165ttt, .table th.tinytable_css_mmgz33jo7358w6165ttt { border-bottom: solid 0.1em #d3d8dc; } trait mean p1 p9 positive_support negative_support D02 8.252038e-03 -0.0029397646 0.0196760509 0.822 0.178 B08 7.109220e-03 -0.0040068882 0.0171378858 0.770 0.230 B01 1.216320e-03 -0.0059241188 0.0081540077 0.610 0.390 S01 1.014944e-03 -0.0109145072 0.0133945495 0.551 0.449 B09 8.119340e-07 -0.0005326007 0.0004986745 0.367 0.633 # Negatively associated function_predictions %&gt;% filter(mean &lt;0) %&gt;% arrange(-negative_support) %&gt;% tt() tinytable_qa560v83hjg4lsvwdyzf .table td.tinytable_css_0e4d1xgyyqnrglsh9xwm, .table th.tinytable_css_0e4d1xgyyqnrglsh9xwm { border-bottom: solid 0.1em #d3d8dc; } trait mean p1 p9 positive_support negative_support D08 -1.093511e-03 -0.002214746 -2.281340e-04 0.032 0.968 B03 -1.057672e-02 -0.017631148 -3.229192e-03 0.045 0.955 D06 -3.229620e-03 -0.006962169 -5.139396e-05 0.098 0.902 B04 -7.665435e-03 -0.017979073 1.779859e-03 0.149 0.851 B06 -6.778849e-03 -0.016584138 2.083246e-03 0.171 0.829 D07 -1.166506e-02 -0.029621342 4.098672e-03 0.194 0.806 D03 -4.540739e-03 -0.012618543 2.717105e-03 0.207 0.793 D05 -1.909669e-03 -0.007386594 2.833109e-03 0.221 0.779 B02 -3.789939e-03 -0.012493886 4.029648e-03 0.247 0.753 S03 -9.214706e-03 -0.031916056 1.659255e-02 0.249 0.751 D09 -1.644702e-03 -0.007831696 4.607589e-03 0.318 0.682 S02 -4.283466e-03 -0.013942829 2.781315e-03 0.319 0.681 B07 -3.643201e-03 -0.015378159 8.373293e-03 0.322 0.678 D01 -3.039883e-04 -0.004674591 4.160412e-03 0.417 0.583 B10 -1.661264e-05 -0.000312485 2.497855e-04 0.449 0.551 positive &lt;- function_predictions %&gt;% filter(mean &gt;0) %&gt;% arrange(mean) %&gt;% filter(positive_support&gt;=0.9) %&gt;% dplyr::select(-negative_support) %&gt;% rename(support=positive_support) negative &lt;- function_predictions %&gt;% filter(mean &lt;0) %&gt;% arrange(mean) %&gt;% filter(negative_support&gt;=0.9) %&gt;% dplyr::select(-positive_support) %&gt;% rename(support=negative_support) bind_rows(positive,negative) %&gt;% left_join(GIFT_db,by=join_by(trait==Code_function)) %&gt;% mutate(trait=factor(trait,levels=c(rev(positive$trait),rev(negative$trait)))) %&gt;% ggplot(aes(x=mean, y=fct_rev(trait), xmin=p1, xmax=p9, color=Function)) + geom_point() + geom_errorbar() + xlim(c(-0.02,0.02)) + geom_vline(xintercept=0) + scale_color_manual(values = c(&quot;#debc14&quot;,&quot;#440526&quot;,&quot;#dc7c17&quot;,&quot;#172742&quot;,&quot;#debc14&quot;,&quot;#440526&quot;,&quot;#dc7c17&quot;,&quot;#172742&quot;,&quot;#357379&quot;,&quot;#6c7e2c&quot;,&quot;#d8dc69&quot;,&quot;#774d35&quot;,&quot;#db717d&quot;)) + theme_minimal() + labs(x=&quot;Regression coefficient&quot;,y=&quot;Functional trait&quot;) 8.3.2 Sex 8.3.2.1 Negatively associated genomes with male cats # Compute variance partitioning varpart=computeVariancePartitioning(m) varpart$vals %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;variable&quot;) %&gt;% pivot_longer(!variable, names_to = &quot;genome&quot;, values_to = &quot;value&quot;) %&gt;% mutate(variable=factor(variable, levels=rev(c(&quot;origin&quot;,&quot;sex&quot;,&quot;logseqdepth&quot;,&quot;Random: location&quot;)))) %&gt;% group_by(variable) %&gt;% summarise(mean=mean(value)*100,sd=sd(value)*100) %&gt;% tt() tinytable_vmb9rx0xx39470t262i5 .table td.tinytable_css_9wll9un5onphd3o41z5p, .table th.tinytable_css_9wll9un5onphd3o41z5p { border-bottom: solid 0.1em #d3d8dc; } variable mean sd Random: location 37.900015 25.317903 logseqdepth 56.110626 25.796874 sex 4.937460 5.612719 origin 1.051899 1.282563 # Select desired support threshold support=0.9 negsupport=1-support # Basal tree postestimates_tree &lt;- genome_tree # Posterior estimate table post_beta &lt;- getPostEstimate(hM=m, parName=&quot;Beta&quot;)$support %&gt;% as.data.frame() %&gt;% mutate(variable=m$covNames) %&gt;% pivot_longer(!variable, names_to = &quot;genome&quot;, values_to = &quot;value&quot;) %&gt;% mutate(genome=factor(genome, levels=rev(postestimates_tree$tip.label))) %&gt;% mutate(value = case_when( value &gt;= support ~ &quot;Positive&quot;, value &lt;= negsupport ~ &quot;Negative&quot;, TRUE ~ &quot;Neutral&quot;)) %&gt;% mutate(value=factor(value, levels=c(&quot;Positive&quot;,&quot;Neutral&quot;,&quot;Negative&quot;))) %&gt;% pivot_wider(names_from = variable, values_from = value) %&gt;% column_to_rownames(var=&quot;genome&quot;) getPostEstimate(hM=m, parName=&quot;Beta&quot;)$support %&gt;% as.data.frame() %&gt;% mutate(variable=m$covNames) %&gt;% pivot_longer(!variable, names_to = &quot;genome&quot;, values_to = &quot;value&quot;) %&gt;% mutate(trend = case_when( value &gt;= support ~ &quot;Positive&quot;, value &lt;= negsupport ~ &quot;Negative&quot;, TRUE ~ &quot;Neutral&quot;)) %&gt;% filter(variable==&quot;sexMale&quot;, trend==&quot;Negative&quot;) %&gt;% arrange(-value) %&gt;% left_join(genome_metadata,by=join_by(genome==genome)) %&gt;% dplyr::select(genome,phylum,class,order,family,species,value) %&gt;% arrange(phylum, class, family)%&gt;% tt() tinytable_rq04k0amne019wihr37m .table td.tinytable_css_jan30mdpooowtrvzl4rq, .table th.tinytable_css_jan30mdpooowtrvzl4rq { border-bottom: solid 0.1em #d3d8dc; } genome phylum class order family species value bin_Denmark.4 Actinomycetota Coriobacteriia Coriobacteriales Coriobacteriaceae Collinsella stercoris 0.090 bin_Aruba.14 Actinomycetota Coriobacteriia Coriobacteriales Coriobacteriaceae Collinsella stercoris 0.089 bin_Brazil.91 Bacillota Bacilli RF39 UBA660 CAG-988 sp003149915 0.082 bin_Brazil.76 Bacillota Bacilli RF39 UBA660 CAG-877 sp900554305 0.017 bin_Malaysia.17 Bacillota Bacilli RF39 UBA660 NA 0.016 bin_Brazil.45 Bacillota Bacilli RF39 UBA660 CAG-877 sp900554315 0.010 bin_Malaysia.16 Bacillota_A Clostridia Oscillospirales Acutalibacteraceae NA 0.085 bin_Malaysia.78 Bacillota_A Clostridia Oscillospirales Acutalibacteraceae Ruminococcus_E bromii_B 0.081 bin_Brazil.69 Bacillota_A Clostridia Oscillospirales Acutalibacteraceae Clostridium_A leptum 0.020 bin_Brazil.83 Bacillota_A Clostridia Lachnospirales Anaerotignaceae NA 0.069 bin_Denmark.63 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Anaerostipes hadrus 0.091 bin_Spain.11 Bacillota_A Clostridia Lachnospirales Lachnospiraceae NA 0.084 bin_Malaysia.3 Bacillota_A Clostridia Lachnospirales Lachnospiraceae NA 0.077 bin_Malaysia.45 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Blautia_A wexlerae 0.077 bin_Brazil.1 Bacillota_A Clostridia Lachnospirales Lachnospiraceae NA 0.071 bin_Malaysia.7 Bacillota_A Clostridia Lachnospirales Lachnospiraceae CAG-317 sp900543415 0.070 bin_Denmark.118 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Dorea_A longicatena 0.066 bin_Brazil.3 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Faecalimonas sp900555395 0.065 bin_Malaysia.52 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Fusicatenibacter saccharivorans 0.065 bin_Brazil.89 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Faecalimonas sp900550235 0.062 bin_Denmark.34 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Fusicatenibacter saccharivorans 0.062 bin_Malaysia.73 Bacillota_A Clostridia Lachnospirales Lachnospiraceae NA 0.062 bin_Brazil.166 Bacillota_A Clostridia Lachnospirales Lachnospiraceae NA 0.057 bin_Brazil.165 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Blautia_A caecimuris 0.055 bin_Denmark.19 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Faecalimonas sp900556835 0.053 bin_Spain.53 Bacillota_A Clostridia Lachnospirales Lachnospiraceae NA 0.053 bin_Brazil.54 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Dorea_B phocaeensis 0.051 bin_Brazil.157 Bacillota_A Clostridia Lachnospirales Lachnospiraceae NA 0.046 bin_Brazil.32 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Mediterraneibacter torques 0.042 bin_Brazil.8 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Blautia_A sp900547615 0.042 bin_Spain.6 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Schaedlerella glycyrrhizinilytica 0.039 bin_Denmark.109 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Eisenbergiella sp900550285 0.034 bin_Brazil.113 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Anaerobutyricum sp900754855 0.031 bin_Brazil.17 Bacillota_A Clostridia Lachnospirales Lachnospiraceae NA 0.030 bin_Spain.37 Bacillota_A Clostridia Lachnospirales Lachnospiraceae UMGS1472 sp900552095 0.029 bin_Denmark.52 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Ruminococcus_B gnavus 0.023 bin_Brazil.56 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Ruminococcus_A sp000432335 0.022 bin_Spain.67 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Ruminococcus_B sp900544395 0.021 bin_Brazil.28 Bacillota_A Clostridia Lachnospirales Lachnospiraceae NA 0.019 bin_Brazil.93 Bacillota_A Clostridia Lachnospirales Lachnospiraceae NA 0.019 bin_Malaysia.110 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Catenibacillus sp900557175 0.018 bin_Aruba.43 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Roseburia sp900548205 0.017 bin_Malaysia.108 Bacillota_A Clostridia Lachnospirales Lachnospiraceae NA 0.017 bin_Brazil.116 Bacillota_A Clostridia Lachnospirales Lachnospiraceae NA 0.016 bin_Malaysia.86 Bacillota_A Clostridia Lachnospirales Lachnospiraceae NA 0.015 bin_Brazil.99 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Lachnospira sp900552795 0.013 bin_CaboVerde.61 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Roseburia sp900548205 0.013 bin_Brazil.97 Bacillota_A Clostridia Lachnospirales Lachnospiraceae UBA9502 sp900538475 0.010 bin_Malaysia.46 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Blautia sp003287895 0.010 bin_Brazil.50 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Lachnospira sp003451515 0.009 bin_Denmark.66 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Blautia sp900120295 0.009 bin_Spain.60 Bacillota_A Clostridia Lachnospirales Lachnospiraceae NA 0.009 bin_Malaysia.125 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Blautia sp900539145 0.008 bin_CaboVerde.34 Bacillota_A Clostridia Lachnospirales Lachnospiraceae NA 0.005 bin_Aruba.13 Bacillota_A Clostridia Lachnospirales Lachnospiraceae CAG-81 sp000435795 0.002 bin_Brazil.63 Bacillota_A Clostridia Lachnospirales Lachnospiraceae NA 0.002 bin_Denmark.62 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Clostridium_Q sp000435655 0.002 bin_Brazil.105 Bacillota_A Clostridia Lachnospirales Lachnospiraceae NA 0.001 bin_Denmark.20 Bacillota_A Clostridia Lachnospirales Lachnospiraceae Enterocloster sp001517625 0.001 bin_Malaysia.98 Bacillota_A Clostridia Oscillospirales Oscillospiraceae NA 0.066 bin_Malaysia.9 Bacillota_A Clostridia Oscillospirales Oscillospiraceae Dysosmobacter welbionis 0.065 bin_Aruba.28 Bacillota_A Clostridia Oscillospirales Oscillospiraceae NA 0.044 bin_Brazil.177 Bacillota_A Clostridia Oscillospirales Oscillospiraceae NA 0.044 bin_Malaysia.116 Bacillota_A Clostridia Oscillospirales Oscillospiraceae Flavonifractor plautii 0.043 bin_Malaysia.34 Bacillota_A Clostridia Oscillospirales Oscillospiraceae Lawsonibacter sp000177015 0.040 bin_Brazil.137 Bacillota_A Clostridia Oscillospirales Oscillospiraceae NA 0.027 bin_Aruba.52 Bacillota_A Clostridia Tissierellales Peptoniphilaceae NA 0.094 bin_Aruba.31 Bacillota_A Clostridia Oscillospirales Ruminococcaceae Negativibacillus sp000435195 0.080 bin_Malaysia.102 Bacillota_A Clostridia Oscillospirales Ruminococcaceae NA 0.080 bin_Malaysia.30 Bacillota_A Clostridia Oscillospirales Ruminococcaceae Phocea massiliensis 0.055 bin_Denmark.72 Bacillota_C Negativicutes Selenomonadales Selenomonadaceae Megamonas funiformis 0.082 bin_Denmark.85 Bacillota_C Negativicutes Selenomonadales Selenomonadaceae NA 0.077 bin_Brazil.5 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Prevotella sp900540415 0.080 bin_Malaysia.18 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Prevotellamassilia sp000437675 0.051 bin_Brazil.48 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Bacteroides sp900766005 0.050 bin_Malaysia.117 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Prevotellamassilia sp900541335 0.047 bin_CaboVerde.18 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Prevotella copri 0.038 bin_Aruba.10 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Prevotella sp900544825 0.037 bin_Malaysia.64 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Paraprevotella clara 0.033 bin_Brazil.163 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Prevotella lascolaii 0.029 bin_Spain.4 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Phocaeicola sp000436795 0.027 bin_Spain.48 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Bacteroides fragilis 0.019 bin_Brazil.96 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Bacteroides uniformis 0.014 bin_Malaysia.105 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Phocaeicola massiliensis 0.014 bin_Spain.21 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Phocaeicola coprophilus 0.012 bin_Malaysia.121 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Bacteroides stercoris 0.011 bin_Brazil.43 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Phocaeicola vulgatus 0.010 bin_Denmark.30 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Phocaeicola sp900546645 0.010 bin_Brazil.103 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Phocaeicola plebeius_A 0.009 bin_Malaysia.77 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Phocaeicola sp900542985 0.006 bin_Brazil.6 Bacteroidota Bacteroidia Bacteroidales Bacteroidaceae Phocaeicola coprocola 0.005 bin_Brazil.110 Bacteroidota Bacteroidia Bacteroidales Barnesiellaceae Barnesiella intestinihominis 0.024 bin_Malaysia.13 Bacteroidota Bacteroidia Bacteroidales Muribaculaceae NA 0.075 bin_Spain.23 Bacteroidota Bacteroidia Bacteroidales Muribaculaceae CAG-279 sp900541935 0.051 bin_CaboVerde.37 Bacteroidota Bacteroidia Bacteroidales Porphyromonadaceae NA 0.058 bin_Brazil.11 Bacteroidota Bacteroidia Bacteroidales Rikenellaceae Alistipes putredinis 0.045 bin_Malaysia.131 Bacteroidota Bacteroidia Bacteroidales Rikenellaceae Alistipes putredinis 0.043 bin_Brazil.38 Bacteroidota Bacteroidia Bacteroidales Rikenellaceae Alistipes communis 0.039 bin_Brazil.86 Bacteroidota Bacteroidia Bacteroidales Rikenellaceae Alistipes dispar 0.030 bin_Brazil.138 Bacteroidota Bacteroidia Bacteroidales Tannerellaceae Parabacteroides sp000436495 0.023 bin_Brazil.124 Bacteroidota Bacteroidia Bacteroidales Tannerellaceae NA 0.019 bin_Brazil.160 Bacteroidota Bacteroidia Bacteroidales Tannerellaceae Parabacteroides distasonis 0.013 bin_CaboVerde.10 Campylobacterota Campylobacteria Campylobacterales Campylobacteraceae NA 0.070 bin_Brazil.68 Campylobacterota Campylobacteria Campylobacterales Campylobacteraceae Campylobacter_D helveticus 0.049 bin_Spain.26 Campylobacterota Campylobacteria Campylobacterales Campylobacteraceae Campylobacter_D upsaliensis 0.047 bin_Brazil.145 Cyanobacteria Vampirovibrionia Gastranaerophilales Gastranaerophilaceae NA 0.044 bin_Brazil.140 Fusobacteriota Fusobacteriia Fusobacteriales Fusobacteriaceae Fusobacterium_A sp900543175 0.029 bin_Malaysia.6 Fusobacteriota Fusobacteriia Fusobacteriales Fusobacteriaceae Fusobacterium_B sp900545035 0.015 bin_Brazil.159 Fusobacteriota Fusobacteriia Fusobacteriales Fusobacteriaceae Fusobacterium_B sp900541465 0.012 bin_Brazil.146 Pseudomonadota Alphaproteobacteria RF32 CAG-239 CAG-495 sp001917125 0.074 bin_Malaysia.50 Pseudomonadota Gammaproteobacteria Enterobacterales Succinivibrionaceae NA 0.084 bin_Brazil.82 Pseudomonadota Gammaproteobacteria Enterobacterales Succinivibrionaceae Anaerobiospirillum succiniciproducens 0.046 bin_CaboVerde.33 Pseudomonadota Gammaproteobacteria Enterobacterales Succinivibrionaceae Anaerobiospirillum sp900543125 0.045 bin_CaboVerde.55 Pseudomonadota Gammaproteobacteria Enterobacterales Succinivibrionaceae Anaerobiospirillum_A thomasii 0.036 bin_Brazil.111 Pseudomonadota Gammaproteobacteria Enterobacterales Succinivibrionaceae Succinivibrio sp000431835 0.024 8.3.2.2 Estimate - support plot estimate &lt;- getPostEstimate(hM=m, parName=&quot;Beta&quot;)$mean %&gt;% as.data.frame() %&gt;% mutate(variable=m$covNames) %&gt;% filter(variable==&quot;sexMale&quot;) %&gt;% pivot_longer(!variable, names_to = &quot;genome&quot;, values_to = &quot;mean&quot;) %&gt;% dplyr::select(genome,mean) support &lt;- getPostEstimate(hM=m, parName=&quot;Beta&quot;)$support %&gt;% as.data.frame() %&gt;% mutate(variable=m$covNames) %&gt;% filter(variable==&quot;sexMale&quot;) %&gt;% pivot_longer(!variable, names_to = &quot;genome&quot;, values_to = &quot;support&quot;) %&gt;% dplyr::select(genome,support) phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate(phylum=str_remove_all(phylum, &quot;p__&quot;)) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% filter(genome %in% estimate$genome) %&gt;% arrange(match(genome, estimate$genome)) %&gt;% dplyr::select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() inner_join(estimate,support,by=join_by(genome==genome)) %&gt;% mutate(significance=ifelse(support &gt;= 0.9 | support &lt;= 0.1,1,0)) %&gt;% mutate(support=ifelse(mean&lt;0,1-support,support)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% mutate(phylum = ifelse(support &gt; 0.9, phylum, NA)) %&gt;% ggplot(aes(x=mean,y=support,color=phylum))+ geom_point(alpha=0.7, shape=16, size=3)+ scale_color_manual(values = phylum_colors) + geom_vline(xintercept = 0) + xlim(c(-0.4,0.4)) + labs(x = &quot;Beta regression coefficient&quot;, y = &quot;Posterior probability&quot;) + theme_minimal()+ theme(legend.position = &quot;none&quot;) 8.3.2.3 Predict responses # Select modelchain of interest load(&quot;hmsc/fit_model1_250_10.Rdata&quot;) gradient = c(&quot;Male&quot;,&quot;Female&quot;,&quot;Unknown&quot;) gradientlength = length(gradient) #Treatment-specific gradient predictions pred &lt;- constructGradient(m, focalVariable = &quot;sex&quot;, non.focalVariables = list(logseqdepth=list(1),location=list(1))) %&gt;% predict(m, Gradient = ., expected = TRUE) %&gt;% do.call(rbind,.) %&gt;% as.data.frame() %&gt;% mutate(sex=rep(gradient,1000)) %&gt;% pivot_longer(!sex,names_to = &quot;genome&quot;, values_to = &quot;value&quot;) # weights: 4 (3 variable) initial value 63.769541 final value 61.728471 converged 8.3.2.4 Element level elements_table &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) %&gt;% as.data.frame() community_elements &lt;- pred %&gt;% group_by(sex, genome) %&gt;% mutate(row_id = row_number()) %&gt;% pivot_wider(names_from = genome, values_from = value) %&gt;% ungroup() %&gt;% group_split(row_id) %&gt;% as.list() %&gt;% lapply(., FUN = function(x){x %&gt;% dplyr::select(-row_id) %&gt;% column_to_rownames(var = &quot;sex&quot;) %&gt;% as.data.frame() %&gt;% exp() %&gt;% t() %&gt;% tss() %&gt;% to.community(elements_table,.,GIFT_db) %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;sex&quot;) }) calculate_slope &lt;- function(x) { lm_fit &lt;- lm(unlist(x) ~ seq_along(unlist(x))) coef(lm_fit)[2] } element_predictions &lt;- map_dfc(community_elements, function(mat) { mat %&gt;% column_to_rownames(var = &quot;sex&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% rowwise() %&gt;% mutate(slope = calculate_slope(c_across(everything()))) %&gt;% dplyr::select(slope) }) %&gt;% t() %&gt;% as.data.frame() %&gt;% set_names(colnames(community_elements[[1]])[-1]) %&gt;% rownames_to_column(var=&quot;iteration&quot;) %&gt;% pivot_longer(!iteration, names_to=&quot;trait&quot;,values_to=&quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(mean=mean(value), p1 = quantile(value, probs = 0.1), p9 = quantile(value, probs = 0.9), positive_support = sum(value &gt; 0)/1000, negative_support = sum(value &lt; 0)/1000) %&gt;% arrange(-positive_support) 8.3.2.4.1 Positive associated functions at element level # Positively associated unique_funct_db&lt;- GIFT_db[c(2,4,5,6)] %&gt;% distinct(Code_element, .keep_all = TRUE) element_predictions %&gt;% filter(mean &gt;0) %&gt;% arrange(-positive_support) %&gt;% filter(positive_support&gt;=0.9) %&gt;% left_join(unique_funct_db, by = join_by(trait == Code_element))%&gt;% arrange(Domain,Function) # A tibble: 30 × 9 trait mean p1 p9 positive_support negative_support Domain Function Element &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 B0220 0.00893 0.00137 0.0165 0.924 0.076 Biosynthesis Amino acid biosynthesis Beta-alanine 2 B0212 0.0293 0.00379 0.0522 0.922 0.078 Biosynthesis Amino acid biosynthesis Arginine 3 B0218 0.0110 0.000319 0.0224 0.902 0.098 Biosynthesis Amino acid biosynthesis Tyrosine 4 B0310 0.0183 0.00536 0.0312 0.964 0.036 Biosynthesis Amino acid derivative biosynthesis Tryptamine 5 B0303 0.0145 0.00204 0.0255 0.924 0.076 Biosynthesis Amino acid derivative biosynthesis Ectoine 6 B0307 0.0418 0.00475 0.0711 0.914 0.086 Biosynthesis Amino acid derivative biosynthesis Spermidine 7 B0901 0.00118 0.000115 0.00255 0.917 0.083 Biosynthesis Metallophore biosynthesis Staphyloferrin 8 B0105 0.0262 0.0106 0.0428 0.948 0.052 Biosynthesis Nucleic acid biosynthesis ADP/ATP 9 B0104 0.0351 0.0102 0.0581 0.942 0.058 Biosynthesis Nucleic acid biosynthesis CDP/CTP 10 B0106 0.0150 0.00305 0.0267 0.921 0.079 Biosynthesis Nucleic acid biosynthesis GDP/GTP # ℹ 20 more rows 8.3.2.4.2 Negatively associated functions at element level element_predictions %&gt;% filter(mean &lt;0) %&gt;% arrange(-negative_support) %&gt;% filter(negative_support&gt;=0.9) %&gt;% left_join(unique_funct_db, by = join_by(trait == Code_element))%&gt;% arrange(Domain,Function) # A tibble: 22 × 9 trait mean p1 p9 positive_support negative_support Domain Function Element &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 B0216 -0.0486 -0.0729 -0.0249 0.026 0.974 Biosynthesis Amino acid biosynthesis Tryptophan 2 B0215 -0.0591 -0.0903 -0.0279 0.03 0.97 Biosynthesis Amino acid biosynthesis Histidine 3 B0208 -0.0292 -0.0541 -0.00505 0.069 0.931 Biosynthesis Amino acid biosynthesis Valine 4 B0209 -0.0283 -0.0555 -0.00322 0.073 0.927 Biosynthesis Amino acid biosynthesis Isoleucine 5 B1012 -0.00833 -0.0130 -0.00368 0.005 0.995 Biosynthesis Antibiotic biosynthesis Fosfomycin 6 B1004 -0.00460 -0.00875 -0.000640 0.081 0.919 Biosynthesis Antibiotic biosynthesis Bacilysin 7 B0604 -0.0259 -0.0515 -0.000348 0.098 0.902 Biosynthesis Organic anion biosynthesis L-lactate 8 B0704 -0.0583 -0.0890 -0.0273 0.013 0.987 Biosynthesis Vitamin biosynthesis Pantothenate (B5) 9 B0711 -0.0330 -0.0522 -0.0149 0.041 0.959 Biosynthesis Vitamin biosynthesis Menaquinone (K2) 10 B0710 -0.0179 -0.0297 -0.00596 0.057 0.943 Biosynthesis Vitamin biosynthesis Phylloquinone (K1) # ℹ 12 more rows positive &lt;- element_predictions %&gt;% filter(mean &gt;0) %&gt;% arrange(mean) %&gt;% filter(positive_support&gt;=0.9) %&gt;% dplyr::select(-negative_support) %&gt;% rename(support=positive_support) negative &lt;- element_predictions %&gt;% filter(mean &lt;0) %&gt;% arrange(mean) %&gt;% filter(negative_support&gt;=0.9) %&gt;% dplyr::select(-positive_support) %&gt;% rename(support=negative_support) bind_rows(positive,negative) %&gt;% left_join(GIFT_db,by=join_by(trait==Code_element)) %&gt;% mutate(trait=factor(trait,levels=c(rev(positive$trait),rev(negative$trait)))) %&gt;% ggplot(aes(x=mean, y=fct_rev(trait), xmin=p1, xmax=p9, color=Function)) + geom_point() + geom_errorbar() + # xlim(c(-0.04,0.04)) + geom_vline(xintercept=0) + # scale_color_manual(values = c(&quot;#debc14&quot;,&quot;#440526&quot;,&quot;#dc7c17&quot;,&quot;#172742&quot;,&quot;#debc14&quot;,&quot;#440526&quot;,&quot;#dc7c17&quot;,&quot;#172742&quot;,&quot;#357379&quot;,&quot;#6c7e2c&quot;,&quot;#d8dc69&quot;,&quot;#774d35&quot;,&quot;#db717d&quot;)) + theme_minimal() + labs(x=&quot;Regression coefficient&quot;,y=&quot;Functional trait&quot;) 8.3.2.5 Function level functions_table &lt;- elements_table %&gt;% to.functions(., GIFT_db) %&gt;% as.data.frame() community_functions &lt;- pred %&gt;% group_by(sex, genome) %&gt;% mutate(row_id = row_number()) %&gt;% pivot_wider(names_from = genome, values_from = value) %&gt;% ungroup() %&gt;% group_split(row_id) %&gt;% as.list() %&gt;% lapply(., FUN = function(x){x %&gt;% dplyr::select(-row_id) %&gt;% column_to_rownames(var = &quot;sex&quot;) %&gt;% as.data.frame() %&gt;% exp() %&gt;% t() %&gt;% tss() %&gt;% to.community(functions_table,.,GIFT_db) %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;sex&quot;) }) #max-min option calculate_slope &lt;- function(x) { lm_fit &lt;- lm(unlist(x) ~ seq_along(unlist(x))) coef(lm_fit)[2] } function_predictions &lt;- map_dfc(community_functions, function(mat) { mat %&gt;% column_to_rownames(var = &quot;sex&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% rowwise() %&gt;% mutate(slope = calculate_slope(c_across(everything()))) %&gt;% dplyr::select(slope) }) %&gt;% t() %&gt;% as.data.frame() %&gt;% set_names(colnames(community_functions[[1]])[-1]) %&gt;% rownames_to_column(var=&quot;iteration&quot;) %&gt;% pivot_longer(!iteration, names_to=&quot;trait&quot;,values_to=&quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(mean=mean(value), p1 = quantile(value, probs = 0.1), p9 = quantile(value, probs = 0.9), positive_support = sum(value &gt; 0)/1000, negative_support = sum(value &lt; 0)/1000) %&gt;% arrange(-positive_support) # Positively associated function_predictions %&gt;% filter(mean &gt;0) %&gt;% arrange(-positive_support) %&gt;% tt() tinytable_f111aufjkf4li5ao75t9 .table td.tinytable_css_yej94ooeiki4btatxikd, .table th.tinytable_css_yej94ooeiki4btatxikd { border-bottom: solid 0.1em #d3d8dc; } trait mean p1 p9 positive_support negative_support D07 0.0375944479 1.972014e-02 0.056148600 0.992 0.008 B01 0.0120235113 2.924545e-03 0.021231683 0.939 0.061 B03 0.0134706279 3.129619e-03 0.021856061 0.932 0.068 D06 0.0046369186 1.904574e-04 0.009455340 0.909 0.091 B09 0.0008808116 2.773819e-05 0.001863172 0.905 0.095 D03 0.0086358818 -2.117773e-03 0.018844548 0.874 0.126 B04 0.0086819802 -1.265781e-03 0.019197647 0.866 0.134 D05 0.0037777625 -6.379054e-03 0.011495393 0.822 0.178 B06 0.0095293505 -4.760244e-03 0.023419874 0.812 0.188 D09 0.0044482653 -4.066690e-03 0.012324899 0.808 0.192 S03 0.0154206703 -1.668538e-02 0.041133011 0.800 0.200 D08 0.0003742537 -4.028928e-04 0.001116957 0.691 0.309 D01 0.0007972038 -4.891676e-03 0.006278674 0.668 0.332 # Negatively associated function_predictions %&gt;% filter(mean &lt;0) %&gt;% arrange(-negative_support) %&gt;% tt() tinytable_5wmwplun1stiulfbo119 .table td.tinytable_css_5mte5guoc5iglkr5c8y1, .table th.tinytable_css_5mte5guoc5iglkr5c8y1 { border-bottom: solid 0.1em #d3d8dc; } trait mean p1 p9 positive_support negative_support B10 -0.0006304998 -0.0009540545 -0.0003081384 0.020 0.980 D02 -0.0151032927 -0.0273709242 -0.0026929023 0.061 0.939 S01 -0.0134498482 -0.0281931644 0.0021095325 0.132 0.868 B07 -0.0093150264 -0.0210303996 0.0025766178 0.142 0.858 S02 -0.0039566793 -0.0121727363 0.0061940272 0.170 0.830 B02 -0.0035889597 -0.0161455535 0.0073469073 0.362 0.638 B08 -0.0017867040 -0.0149536701 0.0101457248 0.533 0.467 positive &lt;- function_predictions %&gt;% filter(mean &gt;0) %&gt;% arrange(mean) %&gt;% filter(positive_support&gt;=0.9) %&gt;% dplyr::select(-negative_support) %&gt;% rename(support=positive_support) negative &lt;- function_predictions %&gt;% filter(mean &lt;0) %&gt;% arrange(mean) %&gt;% filter(negative_support&gt;=0.9) %&gt;% dplyr::select(-positive_support) %&gt;% rename(support=negative_support) bind_rows(positive,negative) %&gt;% left_join(GIFT_db,by=join_by(trait==Code_function)) %&gt;% mutate(trait=factor(trait,levels=c(rev(positive$trait),rev(negative$trait)))) %&gt;% ggplot(aes(x=mean, y=fct_rev(trait), xmin=p1, xmax=p9, color=Function)) + geom_point() + geom_errorbar() + # xlim(c(-0.02,0.02)) + geom_vline(xintercept=0) + scale_color_manual(values = c(&quot;#debc14&quot;,&quot;#440526&quot;,&quot;#dc7c17&quot;,&quot;#172742&quot;,&quot;#357379&quot;,&quot;#6c7e2c&quot;,&quot;#d8dc69&quot;,&quot;#774d35&quot;,&quot;#db717d&quot;)) + theme_minimal() + labs(x=&quot;Regression coefficient&quot;,y=&quot;Functional trait&quot;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
